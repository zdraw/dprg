<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [C:\Users\Raz\Desktop\DPRG\dprg\dprg.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image C:\Users\Raz\Desktop\DPRG\dprg\dprg.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 728]: Last Updated: Fri Nov 12 19:23:04 2010
<BR><P>
<H3>Maximum Stack Usage =        168 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; InitializeMotors &rArr; SetMotorPowers
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[15f3ef8]">Reset_Handler</a>
 <LI><a href="#[15f40d8]">NmiSR</a>
 <LI><a href="#[15f409c]">FaultISR</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[192c48c]">$C$L1</a>
 <LI><a href="#[192c450]">$C$DW$L$WaitUS$7$B</a>
 <LI><a href="#[192c39c]">$C$DW$L$WaitUS$7$E</a>
 <LI><a href="#[192c360]">$C$DW$L$WaitUS$8$E</a>
 <LI><a href="#[192a434]">$C$L2</a>
 <LI><a href="#[192a3f8]">$C$L3</a>
 <LI><a href="#[192a3bc]">$C$L4</a>
 <LI><a href="#[1928d3c]">$C$DW$L$LockoutProtection$4$B</a>
 <LI><a href="#[1928c88]">$C$DW$L$LockoutProtection$4$E</a>
 <LI><a href="#[19283a0]">$C$L3</a>
 <LI><a href="#[1928364]">$C$L4</a>
 <LI><a href="#[1928328]">$C$L5</a>
 <LI><a href="#[19282ec]">$C$L6</a>
 <LI><a href="#[19281c0]">$C$L11</a>
 <LI><a href="#[1928184]">$C$L12</a>
 <LI><a href="#[1928148]">$C$L13</a>
 <LI><a href="#[192810c]">$C$L14</a>
 <LI><a href="#[19280d0]">$C$L15</a>
 <LI><a href="#[1928094]">$C$L16</a>
 <LI><a href="#[1928058]">$C$L17</a>
 <LI><a href="#[192801c]">$C$L18</a>
 <LI><a href="#[1927fe0]">$C$L19</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[15f43a8]">UARTConfigSetExpClk</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15f43a8]">UARTConfigSetExpClk</a><BR>
 <LI><a href="#[19312d4]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19312d4]">SysCtlDelay</a><BR>
 <LI><a href="#[15f40d8]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15f40d8]">NmiSR</a><BR>
 <LI><a href="#[15f409c]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15f409c]">FaultISR</a><BR>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15f4060]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[15f3ef8]">Reset_Handler</a>
 <LI><a href="#[15f40d8]">NmiSR</a>
 <LI><a href="#[15f409c]">FaultISR</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f3e80]">EncoderInterruptHandler</a>
 <LI><a href="#[15f3e80]">EncoderInterruptHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f3e44]">LSIntHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f4060]">IntDefaultHandler</a>
 <LI><a href="#[15f34a8]">main</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[15f3ef8]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[199a83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[199a83c]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[15f3ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[199a4f4]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[199a3c8]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[199a170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[199a38c]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[199a170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[199a29c]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[19312d4]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[19312d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[19311a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[19312d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>

<P><STRONG><a name="[1926b7c]"></a>CPUcpsid</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[1926b40]"></a>CPUprimask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[1926b04]"></a>CPUcpsie</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[19292a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
</UL>

<P><STRONG><a name="[1930974]"></a>CPUwfi</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[15f45c4]"></a>UARTStdioInitExpClk</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, uartstdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTStdioInitExpClk &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[15f436c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTEnable
<LI><a href="#[15f43a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[15f445c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralPresent
<LI><a href="#[15f4498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[15f5050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[15f5014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInit
</UL>

<P><STRONG><a name="[15f5014]"></a>UARTStdioInit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, uartstdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UARTStdioInit &rArr; UARTStdioInitExpClk &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[15f45c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[15f34a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15f4588]"></a>UARTwrite</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, uartstdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15f43e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
</UL>
<BR>[Called By]<UL><LI><a href="#[15f44d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
<LI><a href="#[15f454c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTgets
</UL>

<P><STRONG><a name="[15f454c]"></a>UARTgets</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, uartstdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15f43e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[15f4420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
<LI><a href="#[15f4588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
</UL>

<P><STRONG><a name="[15f4510]"></a>UARTgetc</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, uartstdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15f4420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
</UL>

<P><STRONG><a name="[15f44d4]"></a>UARTprintf</STRONG> (Thumb, 588 bytes, Stack size 72 bytes, uartstdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15f4588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
</UL>

<P><STRONG><a name="[15f3598]"></a>InitializeADC</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, dprg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = InitializeADC &rArr; ADCSequenceStepConfigure
</UL>
<BR>[Calls]<UL><LI><a href="#[15f3340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceStepConfigure
<LI><a href="#[15f337c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceEnable
<LI><a href="#[15f33f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[15f34a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15f355c]"></a>GetADCValue</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dprg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetADCValue
</UL>
<BR>[Calls]<UL><LI><a href="#[15f33b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceDataGet
<LI><a href="#[15f3430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCProcessorTrigger
<LI><a href="#[15f346c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCIntStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[15f3520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitForStartup
</UL>

<P><STRONG><a name="[15f3520]"></a>waitForStartup</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, dprg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = waitForStartup &rArr; GetADCValue
</UL>
<BR>[Calls]<UL><LI><a href="#[15f3250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait
<LI><a href="#[15f328c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetServoPosition
<LI><a href="#[15f355c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCValue
</UL>
<BR>[Called By]<UL><LI><a href="#[15f34a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15f34e4]"></a>codeSelect</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, dprg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = codeSelect
</UL>
<BR>[Calls]<UL><LI><a href="#[15f3304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
</UL>
<BR>[Called By]<UL><LI><a href="#[15f34a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15f34a8]"></a>main</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, dprg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = main &rArr; InitializeMotors &rArr; SetMotorPowers
</UL>
<BR>[Calls]<UL><LI><a href="#[15f32c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[15f34e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codeSelect
<LI><a href="#[15f3520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitForStartup
<LI><a href="#[15f3598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeADC
<LI><a href="#[15f5014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInit
<LI><a href="#[15f5050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[15f5140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockoutProtection
<LI><a href="#[15f517c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
<LI><a href="#[15f51b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMCU
<LI><a href="#[15f5230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
<LI><a href="#[15f526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P><STRONG><a name="[199a170]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[199a38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[199a3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[199a134]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[15f3e80]"></a>EncoderInterruptHandler</STRONG> (Thumb, 0 bytes, Stack size 160 bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = EncoderInterruptHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[15ebff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinIntStatus
<LI><a href="#[1927fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L19
<LI><a href="#[192810c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L14
<LI><a href="#[1928148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L13
<LI><a href="#[1928184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L12
<LI><a href="#[19281c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L11
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[15f5230]"></a>InitializeEncoders</STRONG> (Thumb, 0 bytes, Stack size 96 bytes, encoder.obj(.text:InitializeEncoders))
<BR><BR>[Stack]<UL><LI>Max Depth = 108 + Unknown Stack Size
<LI>Call Chain = InitializeEncoders &rArr; GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[15ebe88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[15ec02c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinIntEnable
<LI><a href="#[15ec194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntTypeSet
<LI><a href="#[15ef6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
<LI><a href="#[15f5050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[1928364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L4
<LI><a href="#[19283a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L3
</UL>
<BR>[Called By]<UL><LI><a href="#[15f34a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15f51b8]"></a>InitializeMCU</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, init.obj(.text:InitializeMCU))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = InitializeMCU &rArr; SysCtlClockSet
</UL>
<BR>[Calls]<UL><LI><a href="#[15f4498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[19292a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
<LI><a href="#[1930d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPWMClockSet
<LI><a href="#[19311a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
</UL>
<BR>[Called By]<UL><LI><a href="#[15f34a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15f517c]"></a>InitializeMotors</STRONG> (Thumb, 0 bytes, Stack size 128 bytes, motor.obj(.text:InitializeMotors))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = InitializeMotors &rArr; SetMotorPowers
</UL>
<BR>[Calls]<UL><LI><a href="#[15ebbf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[15ebd5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[15ebe4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[15f5050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[15f508c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMotorPowers
<LI><a href="#[192a7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMOutputInvert
<LI><a href="#[192b154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenEnable
<LI><a href="#[192b1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenPeriodSet
<LI><a href="#[192b208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenConfigure
<LI><a href="#[192b244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMOutputState
</UL>
<BR>[Called By]<UL><LI><a href="#[15f34a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15f32c8]"></a>InitializeServos</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, servo.obj(.text:InitializeServos))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = InitializeServos &rArr; GPIOPinTypePWM
</UL>
<BR>[Calls]<UL><LI><a href="#[15ebd5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[15f328c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetServoPosition
<LI><a href="#[15f5050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[192b154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenEnable
<LI><a href="#[192b1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenPeriodSet
<LI><a href="#[192b208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenConfigure
<LI><a href="#[192b244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMOutputState
</UL>
<BR>[Called By]<UL><LI><a href="#[15f34a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15f3e44]"></a>LSIntHandler</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, linesensor.obj(.text:LSIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 140 + Unknown Stack Size
<LI>Call Chain = LSIntHandler &rArr; $C$L2 &rArr; StartChargingLS &rArr; GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[19291ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDischargingLS
<LI><a href="#[1929264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntClear
<LI><a href="#[192a3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L3
<LI><a href="#[192a434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[15f5140]"></a>LockoutProtection</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, init.obj(.text:LockoutProtection))
<BR><BR>[Stack]<UL><LI>Max Depth = 44 + Unknown Stack Size
<LI>Call Chain = LockoutProtection &rArr; GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[15ebe88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[15f3304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
<LI><a href="#[15f5050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[1928c88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$DW$L$LockoutProtection$4$E
</UL>
<BR>[Called By]<UL><LI><a href="#[15f34a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1929228]"></a>ReadLS</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, linesensor.obj(.text:ReadLS))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ReadLS
</UL>
<BR>[Calls]<UL><LI><a href="#[15f3304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
</UL>
<BR>[Called By]<UL><LI><a href="#[192a434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L2
</UL>

<P><STRONG><a name="[192a7f4]"></a>SetMotorPower</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, motor.obj(.text:SetMotorPower))
<BR><BR>[Calls]<UL><LI><a href="#[192b280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMPulseWidthSet
</UL>
<BR>[Called By]<UL><LI><a href="#[15f508c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMotorPowers
</UL>

<P><STRONG><a name="[15f508c]"></a>SetMotorPowers</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, motor.obj(.text:SetMotorPowers))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetMotorPowers
</UL>
<BR>[Calls]<UL><LI><a href="#[192a7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMotorPower
</UL>
<BR>[Called By]<UL><LI><a href="#[15f517c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[15f328c]"></a>SetServoPosition</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, servo.obj(.text:SetServoPosition))
<BR><BR>[Calls]<UL><LI><a href="#[192b280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMPulseWidthSet
</UL>
<BR>[Called By]<UL><LI><a href="#[15f32c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[15f3520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitForStartup
</UL>

<P><STRONG><a name="[19290fc]"></a>StartChargingLS</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, linesensor.obj(.text:StartChargingLS))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = StartChargingLS &rArr; GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[15ebbf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[15ebe4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[192a434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L2
</UL>

<P><STRONG><a name="[19291ec]"></a>StartDischargingLS</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, linesensor.obj(.text:StartDischargingLS))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = StartDischargingLS &rArr; GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[15ebe88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
</UL>
<BR>[Called By]<UL><LI><a href="#[15f3e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSIntHandler
</UL>

<P><STRONG><a name="[15f3250]"></a>Wait</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, timer.obj(.text:Wait))
<BR><BR>[Called By]<UL><LI><a href="#[15f3520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitForStartup
</UL>

<P><STRONG><a name="[192bc1c]"></a>WaitUS</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, timer.obj(.text:WaitUS), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15f5050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[192bc94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerConfigure
<LI><a href="#[192c48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L1
</UL>

<P><STRONG><a name="[15f346c]"></a>ADCIntStatus</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, adc.o(i.ADCIntStatus))
<BR><BR>[Called By]<UL><LI><a href="#[15f355c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCValue
</UL>

<P><STRONG><a name="[15f3430]"></a>ADCProcessorTrigger</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, adc.o(i.ADCProcessorTrigger))
<BR><BR>[Called By]<UL><LI><a href="#[15f355c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCValue
</UL>

<P><STRONG><a name="[15f33f4]"></a>ADCSequenceConfigure</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, adc.o(i.ADCSequenceConfigure))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ADCSequenceConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[15f3598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeADC
</UL>

<P><STRONG><a name="[15f33b8]"></a>ADCSequenceDataGet</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, adc.o(i.ADCSequenceDataGet))
<BR><BR>[Called By]<UL><LI><a href="#[15f355c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCValue
</UL>

<P><STRONG><a name="[15f337c]"></a>ADCSequenceEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, adc.o(i.ADCSequenceEnable))
<BR><BR>[Called By]<UL><LI><a href="#[15f3598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeADC
</UL>

<P><STRONG><a name="[15f3340]"></a>ADCSequenceStepConfigure</STRONG> (Thumb, 110 bytes, Stack size 4 bytes, adc.o(i.ADCSequenceStepConfigure))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ADCSequenceStepConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[15f3598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeADC
</UL>

<P><STRONG><a name="[15ec20c]"></a>GPIODirModeSet</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[15ebd5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[15ebe4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[15ebe88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[15f526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
</UL>

<P><STRONG><a name="[15ec194]"></a>GPIOIntTypeSet</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gpio.o(i.GPIOIntTypeSet))
<BR><BR>[Called By]<UL><LI><a href="#[15f5230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
</UL>

<P><STRONG><a name="[15ec11c]"></a>GPIOPadConfigSet</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[15ebd5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[15ebe4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[15ebe88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[15f526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
</UL>

<P><STRONG><a name="[15ec0a4]"></a>GPIOPinIntClear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[192810c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L14
</UL>

<P><STRONG><a name="[15ec02c]"></a>GPIOPinIntEnable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[15f5230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
</UL>

<P><STRONG><a name="[15ebff0]"></a>GPIOPinIntStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinIntStatus))
<BR><BR>[Called By]<UL><LI><a href="#[15f3e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncoderInterruptHandler
</UL>

<P><STRONG><a name="[15f3304]"></a>GPIOPinRead</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinRead))
<BR><BR>[Called By]<UL><LI><a href="#[15f34e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codeSelect
<LI><a href="#[15f5140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockoutProtection
<LI><a href="#[19280d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L15
<LI><a href="#[192810c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L14
<LI><a href="#[1929228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLS
</UL>

<P><STRONG><a name="[15ebe88]"></a>GPIOPinTypeGPIOInput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[15ec11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[15ec20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[15f5140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockoutProtection
<LI><a href="#[15f5230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
<LI><a href="#[19291ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDischargingLS
</UL>

<P><STRONG><a name="[15ebe4c]"></a>GPIOPinTypeGPIOOutput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[15ec11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[15ec20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[15f517c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
<LI><a href="#[19290fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingLS
</UL>

<P><STRONG><a name="[15ebd5c]"></a>GPIOPinTypePWM</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypePWM))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypePWM
</UL>
<BR>[Calls]<UL><LI><a href="#[15ec11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[15ec20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[15f32c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[15f517c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[15f526c]"></a>GPIOPinTypeUART</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeUART))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeUART
</UL>
<BR>[Calls]<UL><LI><a href="#[15ec11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[15ec20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[15f34a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15ebbf4]"></a>GPIOPinWrite</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[15f517c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
<LI><a href="#[19290fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingLS
</UL>

<P><STRONG><a name="[15ef6c8]"></a>IntEnable</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, interrupt.o(i.IntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[15f5230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
</UL>

<P><STRONG><a name="[19292a0]"></a>IntMasterEnable</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, interrupt.o(i.IntMasterEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IntMasterEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[1926b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPUcpsie
</UL>
<BR>[Called By]<UL><LI><a href="#[15f51b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMCU
</UL>

<P><STRONG><a name="[192b208]"></a>PWMGenConfigure</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, pwm.o(i.PWMGenConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[15f32c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[15f517c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[192b154]"></a>PWMGenEnable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pwm.o(i.PWMGenEnable))
<BR><BR>[Called By]<UL><LI><a href="#[15f32c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[15f517c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[192b1cc]"></a>PWMGenPeriodSet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, pwm.o(i.PWMGenPeriodSet))
<BR><BR>[Called By]<UL><LI><a href="#[15f32c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[15f517c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[192a7b8]"></a>PWMOutputInvert</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, pwm.o(i.PWMOutputInvert))
<BR><BR>[Called By]<UL><LI><a href="#[15f517c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[192b244]"></a>PWMOutputState</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, pwm.o(i.PWMOutputState))
<BR><BR>[Called By]<UL><LI><a href="#[15f32c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[15f517c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[192b280]"></a>PWMPulseWidthSet</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, pwm.o(i.PWMPulseWidthSet))
<BR><BR>[Called By]<UL><LI><a href="#[15f328c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetServoPosition
<LI><a href="#[192a7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMotorPower
</UL>

<P><STRONG><a name="[15f4498]"></a>SysCtlClockGet</STRONG> (Thumb, 438 bytes, Stack size 8 bytes, sysctl.o(i.SysCtlClockGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[15f45c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
<LI><a href="#[15f51b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMCU
</UL>

<P><STRONG><a name="[19311a8]"></a>SysCtlClockSet</STRONG> (Thumb, 288 bytes, Stack size 24 bytes, sysctl.o(i.SysCtlClockSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysCtlClockSet
</UL>
<BR>[Calls]<UL><LI><a href="#[19312d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[15f51b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMCU
</UL>

<P><STRONG><a name="[1930d34]"></a>SysCtlPWMClockSet</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPWMClockSet))
<BR><BR>[Called By]<UL><LI><a href="#[15f51b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMCU
</UL>

<P><STRONG><a name="[15f5050]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[15f32c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[15f34a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[15f45c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
<LI><a href="#[15f5140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockoutProtection
<LI><a href="#[15f517c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
<LI><a href="#[15f5230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
<LI><a href="#[192bc1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUS
</UL>

<P><STRONG><a name="[15f445c]"></a>SysCtlPeripheralPresent</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralPresent))
<BR><BR>[Called By]<UL><LI><a href="#[15f45c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
</UL>

<P><STRONG><a name="[192bc94]"></a>TimerConfigure</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, timer.o(i.TimerConfigure), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[192bc1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUS
</UL>

<P><STRONG><a name="[192bbe0]"></a>TimerDisable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, timer.o(i.TimerDisable), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[192c360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$DW$L$WaitUS$8$E
</UL>

<P><STRONG><a name="[192bc58]"></a>TimerEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, timer.o(i.TimerEnable), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[192c48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L1
</UL>

<P><STRONG><a name="[1929264]"></a>TimerIntClear</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, timer.o(i.TimerIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[15f3e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSIntHandler
</UL>

<P><STRONG><a name="[192bd0c]"></a>TimerLoadSet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, timer.o(i.TimerLoadSet))
<BR><BR>[Called By]<UL><LI><a href="#[192a3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L3
<LI><a href="#[192c48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L1
</UL>

<P><STRONG><a name="[192bd48]"></a>TimerValueGet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, timer.o(i.TimerValueGet), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[192c450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$DW$L$WaitUS$7$B
</UL>

<P><STRONG><a name="[15f4420]"></a>UARTCharGet</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.UARTCharGet), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15f4420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
</UL>
<BR>[Called By]<UL><LI><a href="#[15f4420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
<LI><a href="#[15f4510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTgetc
<LI><a href="#[15f454c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTgets
</UL>

<P><STRONG><a name="[15f43e4]"></a>UARTCharPut</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.UARTCharPut), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15f43e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
</UL>
<BR>[Called By]<UL><LI><a href="#[15f43e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[15f454c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTgets
<LI><a href="#[15f4588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
</UL>

<P><STRONG><a name="[15f43a8]"></a>UARTConfigSetExpClk</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, uart.o(i.UARTConfigSetExpClk))
<BR><BR>[Calls]<UL><LI><a href="#[15f43a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[15f43a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[15f45c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
</UL>

<P><STRONG><a name="[15f436c]"></a>UARTEnable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uart.o(i.UARTEnable))
<BR><BR>[Called By]<UL><LI><a href="#[15f45c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
</UL>

<P><STRONG><a name="[1999d74]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[1999d38]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[1999cfc]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[15f40d8]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[15f40d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[15f40d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[15f409c]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[15f409c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[15f409c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[15f4060]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[15f4060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[15f4060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[192c48c]"></a>$C$L1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, timer.obj(.text:WaitUS), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[192bc58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerEnable
<LI><a href="#[192bd0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
</UL>
<BR>[Called By]<UL><LI><a href="#[192bc1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUS
</UL>

<P><STRONG><a name="[192c450]"></a>$C$DW$L$WaitUS$7$B</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, timer.obj(.text:WaitUS), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[192bd48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerValueGet
</UL>
<BR>[Called By]<UL><LI><a href="#[192c39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$DW$L$WaitUS$7$E
</UL>

<P><STRONG><a name="[192c39c]"></a>$C$DW$L$WaitUS$7$E</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, timer.obj(.text:WaitUS), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[192c450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$DW$L$WaitUS$7$B
</UL>

<P><STRONG><a name="[192c360]"></a>$C$DW$L$WaitUS$8$E</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, timer.obj(.text:WaitUS), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[192bbe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerDisable
</UL>

<P><STRONG><a name="[192a434]"></a>$C$L2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, linesensor.obj(.text:LSIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = $C$L2 &rArr; StartChargingLS &rArr; GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[19290fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingLS
<LI><a href="#[1929228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLS
</UL>
<BR>[Called By]<UL><LI><a href="#[15f3e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSIntHandler
</UL>

<P><STRONG><a name="[192a3f8]"></a>$C$L3</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, linesensor.obj(.text:LSIntHandler))
<BR><BR>[Calls]<UL><LI><a href="#[192a3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L4
<LI><a href="#[192bd0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
</UL>
<BR>[Called By]<UL><LI><a href="#[15f3e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSIntHandler
</UL>

<P><STRONG><a name="[192a3bc]"></a>$C$L4</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, linesensor.obj(.text:LSIntHandler))
<BR><BR>[Called By]<UL><LI><a href="#[192a3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L3
</UL>

<P><STRONG><a name="[1928d3c]"></a>$C$DW$L$LockoutProtection$4$B</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, init.obj(.text:LockoutProtection), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1928d3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$DW$L$LockoutProtection$4$B
</UL>
<BR>[Called By]<UL><LI><a href="#[1928d3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$DW$L$LockoutProtection$4$B
</UL>

<P><STRONG><a name="[1928c88]"></a>$C$DW$L$LockoutProtection$4$E</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, init.obj(.text:LockoutProtection))
<BR><BR>[Called By]<UL><LI><a href="#[15f5140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockoutProtection
</UL>

<P><STRONG><a name="[19283a0]"></a>$C$L3</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:InitializeEncoders))
<BR><BR>[Called By]<UL><LI><a href="#[15f5230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
</UL>

<P><STRONG><a name="[1928364]"></a>$C$L4</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:InitializeEncoders))
<BR><BR>[Calls]<UL><LI><a href="#[19282ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L6
<LI><a href="#[1928328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L5
</UL>
<BR>[Called By]<UL><LI><a href="#[15f5230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
</UL>

<P><STRONG><a name="[1928328]"></a>$C$L5</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:InitializeEncoders))
<BR><BR>[Called By]<UL><LI><a href="#[1928364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L4
</UL>

<P><STRONG><a name="[19282ec]"></a>$C$L6</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:InitializeEncoders))
<BR><BR>[Called By]<UL><LI><a href="#[1928364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L4
</UL>

<P><STRONG><a name="[19281c0]"></a>$C$L11</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Calls]<UL><LI><a href="#[192810c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L14
</UL>
<BR>[Called By]<UL><LI><a href="#[15f3e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncoderInterruptHandler
</UL>

<P><STRONG><a name="[1928184]"></a>$C$L12</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Calls]<UL><LI><a href="#[192810c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L14
</UL>
<BR>[Called By]<UL><LI><a href="#[15f3e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncoderInterruptHandler
</UL>

<P><STRONG><a name="[1928148]"></a>$C$L13</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Called By]<UL><LI><a href="#[15f3e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncoderInterruptHandler
</UL>

<P><STRONG><a name="[192810c]"></a>$C$L14</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Calls]<UL><LI><a href="#[15ec0a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinIntClear
<LI><a href="#[15f3304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
<LI><a href="#[19280d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L15
</UL>
<BR>[Called By]<UL><LI><a href="#[15f3e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncoderInterruptHandler
<LI><a href="#[1928184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L12
<LI><a href="#[19281c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L11
</UL>

<P><STRONG><a name="[19280d0]"></a>$C$L15</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Calls]<UL><LI><a href="#[15f3304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
<LI><a href="#[1928094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L16
</UL>
<BR>[Called By]<UL><LI><a href="#[192810c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L14
</UL>

<P><STRONG><a name="[1928094]"></a>$C$L16</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Calls]<UL><LI><a href="#[1927fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L19
<LI><a href="#[192801c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L18
<LI><a href="#[1928058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L17
</UL>
<BR>[Called By]<UL><LI><a href="#[19280d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L15
</UL>

<P><STRONG><a name="[1928058]"></a>$C$L17</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Calls]<UL><LI><a href="#[1927fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L19
</UL>
<BR>[Called By]<UL><LI><a href="#[1928094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L16
</UL>

<P><STRONG><a name="[192801c]"></a>$C$L18</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Called By]<UL><LI><a href="#[1928094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L16
</UL>

<P><STRONG><a name="[1927fe0]"></a>$C$L19</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Called By]<UL><LI><a href="#[15f3e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncoderInterruptHandler
<LI><a href="#[1928058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L17
<LI><a href="#[1928094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L16
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
