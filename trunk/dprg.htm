<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [C:\Users\Raz\Desktop\DPRG\dprg\dprg.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image C:\Users\Raz\Desktop\DPRG\dprg\dprg.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 728]: Last Updated: Sat Nov 13 01:40:47 2010
<BR><P>
<H3>Maximum Stack Usage =        200 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; LineFollow &rArr; InitializeMotors &rArr; SetMotorPowers
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[1712cec]">Reset_Handler</a>
 <LI><a href="#[1712ecc]">NmiSR</a>
 <LI><a href="#[1712e90]">FaultISR</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[2561604]">$C$L1</a>
 <LI><a href="#[25615c8]">$C$DW$L$WaitUS$7$B</a>
 <LI><a href="#[2561514]">$C$DW$L$WaitUS$7$E</a>
 <LI><a href="#[25614d8]">$C$DW$L$WaitUS$8$E</a>
 <LI><a href="#[255f5e8]">$C$L1</a>
 <LI><a href="#[255f5ac]">$C$L2</a>
 <LI><a href="#[255f570]">$C$L3</a>
 <LI><a href="#[255f534]">$C$L4</a>
 <LI><a href="#[255deb4]">$C$DW$L$LockoutProtection$4$B</a>
 <LI><a href="#[255de00]">$C$DW$L$LockoutProtection$4$E</a>
 <LI><a href="#[255d518]">$C$L3</a>
 <LI><a href="#[255d4dc]">$C$L4</a>
 <LI><a href="#[255d4a0]">$C$L5</a>
 <LI><a href="#[255d464]">$C$L6</a>
 <LI><a href="#[255d428]">$C$L7</a>
 <LI><a href="#[255d3ec]">$C$L8</a>
 <LI><a href="#[255d3b0]">$C$L9</a>
 <LI><a href="#[255d374]">$C$L10</a>
 <LI><a href="#[255d338]">$C$L11</a>
 <LI><a href="#[255d2fc]">$C$L12</a>
 <LI><a href="#[255d2c0]">$C$L13</a>
 <LI><a href="#[255d284]">$C$L14</a>
 <LI><a href="#[255d248]">$C$L15</a>
 <LI><a href="#[255d20c]">$C$L16</a>
 <LI><a href="#[255d1d0]">$C$L17</a>
 <LI><a href="#[255d194]">$C$L18</a>
 <LI><a href="#[255d158]">$C$L19</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[17131d8]">UARTCharPut</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17131d8]">UARTCharPut</a><BR>
 <LI><a href="#[171319c]">UARTConfigSetExpClk</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[171319c]">UARTConfigSetExpClk</a><BR>
 <LI><a href="#[256644c]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[256644c]">SysCtlDelay</a><BR>
 <LI><a href="#[1712ecc]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1712ecc]">NmiSR</a><BR>
 <LI><a href="#[1712e90]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1712e90]">FaultISR</a><BR>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1712e54]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1712cec]">Reset_Handler</a>
 <LI><a href="#[1712ecc]">NmiSR</a>
 <LI><a href="#[1712e90]">FaultISR</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712c74]">EncoderInterruptHandler</a>
 <LI><a href="#[1712c74]">EncoderInterruptHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712c38]">LSIntHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[1712e54]">IntDefaultHandler</a>
 <LI><a href="#[171256c]">main</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1712cec]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[25cfa2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[25cfa2c]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[1712cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[25cf6e4]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[25cf5b8]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[25cf360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[25cf57c]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[25cf360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[25cf48c]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[256644c]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[256644c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[2566320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[256644c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>

<P><STRONG><a name="[255bd6c]"></a>CPUcpsid</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[255bd30]"></a>CPUprimask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[255bcf4]"></a>CPUcpsie</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[255e418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
</UL>

<P><STRONG><a name="[2565aec]"></a>CPUwfi</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[17152a8]"></a>getLineError</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, linefollow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = getLineError
</UL>
<BR>[Called By]<UL><LI><a href="#[171526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[171526c]"></a>LineFollow</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, linefollow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = LineFollow &rArr; InitializeMotors &rArr; SetMotorPowers
</UL>
<BR>[Calls]<UL><LI><a href="#[1714f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saturate
<LI><a href="#[1714f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInit
<LI><a href="#[1714fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[1715014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMotorPowers
<LI><a href="#[1715050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDischargeTime
<LI><a href="#[171508c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLineSensor
<LI><a href="#[17150c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID
<LI><a href="#[1715104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockoutProtection
<LI><a href="#[1715140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
<LI><a href="#[171517c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMCU
<LI><a href="#[17151b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeLineSensor
<LI><a href="#[17151f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
<LI><a href="#[1715230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[17152a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getLineError
</UL>
<BR>[Called By]<UL><LI><a href="#[171256c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[171481c]"></a>getDistance</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, tabletop.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = getDistance &rArr; UARTprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[1714678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
<LI><a href="#[171472c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceDataGet
<LI><a href="#[1714768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCProcessorTrigger
<LI><a href="#[17147a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCIntStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[17147e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crossTable
</UL>

<P><STRONG><a name="[17147e0]"></a>crossTable</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, tabletop.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = crossTable &rArr; getDistance &rArr; UARTprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[17146b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PresetEncoderCounts
<LI><a href="#[17146f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEncoderCount
<LI><a href="#[171481c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDistance
<LI><a href="#[1715014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMotorPowers
</UL>
<BR>[Called By]<UL><LI><a href="#[171256c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1714150]"></a>UpdateMotors</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, squaredance.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UpdateMotors &rArr; SetMotorPowers
</UL>
<BR>[Calls]<UL><LI><a href="#[1714f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saturate
<LI><a href="#[1715014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMotorPowers
<LI><a href="#[17150c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID
</UL>
<BR>[Called By]<UL><LI><a href="#[1714114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SquareDance
</UL>

<P><STRONG><a name="[1714114]"></a>SquareDance</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, squaredance.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = SquareDance &rArr; UARTprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[1714150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMotors
<LI><a href="#[1714678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
<LI><a href="#[17146f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEncoderCount
<LI><a href="#[1715014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMotorPowers
</UL>
<BR>[Called By]<UL><LI><a href="#[171256c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17150c8]"></a>PID</STRONG> (Thumb, 44 bytes, Stack size 20 bytes, motorpid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PID
</UL>
<BR>[Called By]<UL><LI><a href="#[1714150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMotors
<LI><a href="#[171526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[1714f60]"></a>saturate</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, motorpid.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1714150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMotors
<LI><a href="#[171526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[171337c]"></a>UARTStdioInitExpClk</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, uartstdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTStdioInitExpClk &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[1713160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTEnable
<LI><a href="#[171319c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[1713250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralPresent
<LI><a href="#[171328c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[1714fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[1714f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInit
</UL>

<P><STRONG><a name="[1714f9c]"></a>UARTStdioInit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, uartstdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UARTStdioInit &rArr; UARTStdioInitExpClk &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[171337c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[171256c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[171526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[1713340]"></a>UARTwrite</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, uartstdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[17131d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
</UL>
<BR>[Called By]<UL><LI><a href="#[1713304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTgets
<LI><a href="#[1714678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
</UL>

<P><STRONG><a name="[1713304]"></a>UARTgets</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, uartstdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17131d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1713214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
<LI><a href="#[1713340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
</UL>

<P><STRONG><a name="[17132c8]"></a>UARTgetc</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, uartstdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1713214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
</UL>

<P><STRONG><a name="[1714678]"></a>UARTprintf</STRONG> (Thumb, 588 bytes, Stack size 72 bytes, uartstdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = UARTprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[1713340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
</UL>
<BR>[Called By]<UL><LI><a href="#[171256c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1714114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SquareDance
<LI><a href="#[171481c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDistance
</UL>

<P><STRONG><a name="[171265c]"></a>InitializeADC</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, dprg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = InitializeADC &rArr; ADCSequenceStepConfigure
</UL>
<BR>[Calls]<UL><LI><a href="#[17124b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceStepConfigure
<LI><a href="#[17124f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceEnable
<LI><a href="#[1712530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[171256c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1712620]"></a>GetADCValue</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, dprg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetADCValue
</UL>
<BR>[Calls]<UL><LI><a href="#[171238c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait
<LI><a href="#[171472c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceDataGet
<LI><a href="#[1714768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCProcessorTrigger
<LI><a href="#[17147a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCIntStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[17125e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitForStartup
</UL>

<P><STRONG><a name="[17125e4]"></a>waitForStartup</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, dprg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = waitForStartup &rArr; GetADCValue
</UL>
<BR>[Calls]<UL><LI><a href="#[171238c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait
<LI><a href="#[17123c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetServoPosition
<LI><a href="#[1712440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[1712620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCValue
<LI><a href="#[1714fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[171256c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17125a8]"></a>codeSelect</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, dprg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = codeSelect
</UL>
<BR>[Calls]<UL><LI><a href="#[171247c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
</UL>
<BR>[Called By]<UL><LI><a href="#[171256c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[171256c]"></a>main</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, dprg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = main &rArr; LineFollow &rArr; InitializeMotors &rArr; SetMotorPowers
</UL>
<BR>[Calls]<UL><LI><a href="#[1712404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[17125a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codeSelect
<LI><a href="#[17125e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitForStartup
<LI><a href="#[171265c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeADC
<LI><a href="#[1714114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SquareDance
<LI><a href="#[1714678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
<LI><a href="#[17147e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crossTable
<LI><a href="#[1714f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInit
<LI><a href="#[1714fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[1715104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockoutProtection
<LI><a href="#[1715140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
<LI><a href="#[171517c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMCU
<LI><a href="#[17151f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
<LI><a href="#[1715230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[171526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P><STRONG><a name="[25cf360]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25cf57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[25cf5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[25cf324]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[1712c74]"></a>EncoderInterruptHandler</STRONG> (Thumb, 0 bytes, Stack size 160 bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = EncoderInterruptHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[170b12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinIntStatus
<LI><a href="#[255d158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L19
<LI><a href="#[255d284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L14
<LI><a href="#[255d2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L13
<LI><a href="#[255d2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L12
<LI><a href="#[255d338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L11
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[17146f0]"></a>GetEncoderCount</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, encoder.obj(.text:GetEncoderCount))
<BR><BR>[Calls]<UL><LI><a href="#[255d3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L9
<LI><a href="#[255d3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L8
<LI><a href="#[255d428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L7
</UL>
<BR>[Called By]<UL><LI><a href="#[1714114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SquareDance
<LI><a href="#[17147e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crossTable
</UL>

<P><STRONG><a name="[17151f4]"></a>InitializeEncoders</STRONG> (Thumb, 0 bytes, Stack size 96 bytes, encoder.obj(.text:InitializeEncoders))
<BR><BR>[Stack]<UL><LI>Max Depth = 108 + Unknown Stack Size
<LI>Call Chain = InitializeEncoders &rArr; GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[170b168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinIntEnable
<LI><a href="#[170b2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntTypeSet
<LI><a href="#[170e804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
<LI><a href="#[1712440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[1714fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[255d4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L4
<LI><a href="#[255d518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L3
</UL>
<BR>[Called By]<UL><LI><a href="#[171256c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[171526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[17151b8]"></a>InitializeLineSensor</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, linesensor.obj(.text:InitializeLineSensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = InitializeLineSensor &rArr; GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[1712440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[1714fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[171526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[171517c]"></a>InitializeMCU</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, init.obj(.text:InitializeMCU))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = InitializeMCU &rArr; SysCtlClockSet
</UL>
<BR>[Calls]<UL><LI><a href="#[171328c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[255e418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
<LI><a href="#[2565eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPWMClockSet
<LI><a href="#[2566320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
</UL>
<BR>[Called By]<UL><LI><a href="#[171256c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[171526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[1715140]"></a>InitializeMotors</STRONG> (Thumb, 0 bytes, Stack size 128 bytes, motor.obj(.text:InitializeMotors))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = InitializeMotors &rArr; SetMotorPowers
</UL>
<BR>[Calls]<UL><LI><a href="#[170ad6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[170aed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[170afc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[1714fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[1715014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMotorPowers
<LI><a href="#[255f930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMOutputInvert
<LI><a href="#[25602cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenEnable
<LI><a href="#[2560344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenPeriodSet
<LI><a href="#[2560380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenConfigure
<LI><a href="#[25603bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMOutputState
</UL>
<BR>[Called By]<UL><LI><a href="#[171256c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[171526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[1712404]"></a>InitializeServos</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, servo.obj(.text:InitializeServos))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = InitializeServos &rArr; GPIOPinTypePWM
</UL>
<BR>[Calls]<UL><LI><a href="#[170aed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[17123c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetServoPosition
<LI><a href="#[1714fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[25602cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenEnable
<LI><a href="#[2560344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenPeriodSet
<LI><a href="#[2560380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenConfigure
<LI><a href="#[25603bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMOutputState
</UL>
<BR>[Called By]<UL><LI><a href="#[171256c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1712c38]"></a>LSIntHandler</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, linesensor.obj(.text:LSIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 140 + Unknown Stack Size
<LI>Call Chain = LSIntHandler &rArr; $C$L2 &rArr; StartChargingLS &rArr; GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[255e364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDischargingLS
<LI><a href="#[255e3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntClear
<LI><a href="#[255f570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L3
<LI><a href="#[255f5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[1715104]"></a>LockoutProtection</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, init.obj(.text:LockoutProtection))
<BR><BR>[Stack]<UL><LI>Max Depth = 44 + Unknown Stack Size
<LI>Call Chain = LockoutProtection &rArr; GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[1712440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[171247c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
<LI><a href="#[1714fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[255de00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$DW$L$LockoutProtection$4$E
</UL>
<BR>[Called By]<UL><LI><a href="#[171256c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[171526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[17146b4]"></a>PresetEncoderCounts</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, encoder.obj(.text:PresetEncoderCounts))
<BR><BR>[Called By]<UL><LI><a href="#[17147e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crossTable
</UL>

<P><STRONG><a name="[255e3a0]"></a>ReadLS</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, linesensor.obj(.text:ReadLS))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ReadLS
</UL>
<BR>[Calls]<UL><LI><a href="#[171247c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
</UL>
<BR>[Called By]<UL><LI><a href="#[171508c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLineSensor
<LI><a href="#[255f5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L2
</UL>

<P><STRONG><a name="[171508c]"></a>ReadLineSensor</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, linesensor.obj(.text:ReadLineSensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 108 + Unknown Stack Size
<LI>Call Chain = ReadLineSensor &rArr; StartChargingLS &rArr; GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[255e274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingLS
<LI><a href="#[255e364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDischargingLS
<LI><a href="#[255e3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLS
<LI><a href="#[2560d94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUS
</UL>
<BR>[Called By]<UL><LI><a href="#[171526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[1715050]"></a>SetDischargeTime</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, linesensor.obj(.text:SetDischargeTime))
<BR><BR>[Calls]<UL><LI><a href="#[255f5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L1
</UL>
<BR>[Called By]<UL><LI><a href="#[171526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[255f96c]"></a>SetMotorPower</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, motor.obj(.text:SetMotorPower))
<BR><BR>[Calls]<UL><LI><a href="#[25603f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMPulseWidthSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1715014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMotorPowers
</UL>

<P><STRONG><a name="[1715014]"></a>SetMotorPowers</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, motor.obj(.text:SetMotorPowers))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetMotorPowers
</UL>
<BR>[Calls]<UL><LI><a href="#[255f96c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMotorPower
</UL>
<BR>[Called By]<UL><LI><a href="#[1714114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SquareDance
<LI><a href="#[1714150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMotors
<LI><a href="#[17147e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crossTable
<LI><a href="#[1715140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
<LI><a href="#[171526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[17123c8]"></a>SetServoPosition</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, servo.obj(.text:SetServoPosition))
<BR><BR>[Calls]<UL><LI><a href="#[25603f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMPulseWidthSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1712404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[17125e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitForStartup
</UL>

<P><STRONG><a name="[255e274]"></a>StartChargingLS</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, linesensor.obj(.text:StartChargingLS))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = StartChargingLS &rArr; GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[170ad6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[170afc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[171508c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLineSensor
<LI><a href="#[255f5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L2
</UL>

<P><STRONG><a name="[255e364]"></a>StartDischargingLS</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, linesensor.obj(.text:StartDischargingLS))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = StartDischargingLS &rArr; GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[1712440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
</UL>
<BR>[Called By]<UL><LI><a href="#[1712c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSIntHandler
<LI><a href="#[171508c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLineSensor
</UL>

<P><STRONG><a name="[171238c]"></a>Wait</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, timer.obj(.text:Wait))
<BR><BR>[Called By]<UL><LI><a href="#[17125e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitForStartup
<LI><a href="#[1712620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCValue
</UL>

<P><STRONG><a name="[2560d94]"></a>WaitUS</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, timer.obj(.text:WaitUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = WaitUS
</UL>
<BR>[Calls]<UL><LI><a href="#[1714fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[2560e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerConfigure
<LI><a href="#[2561604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L1
</UL>
<BR>[Called By]<UL><LI><a href="#[171508c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLineSensor
</UL>

<P><STRONG><a name="[17147a4]"></a>ADCIntStatus</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, adc.o(i.ADCIntStatus))
<BR><BR>[Called By]<UL><LI><a href="#[1712620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCValue
<LI><a href="#[171481c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDistance
</UL>

<P><STRONG><a name="[1714768]"></a>ADCProcessorTrigger</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, adc.o(i.ADCProcessorTrigger))
<BR><BR>[Called By]<UL><LI><a href="#[1712620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCValue
<LI><a href="#[171481c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDistance
</UL>

<P><STRONG><a name="[1712530]"></a>ADCSequenceConfigure</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, adc.o(i.ADCSequenceConfigure))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ADCSequenceConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[171265c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeADC
</UL>

<P><STRONG><a name="[171472c]"></a>ADCSequenceDataGet</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, adc.o(i.ADCSequenceDataGet))
<BR><BR>[Called By]<UL><LI><a href="#[1712620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCValue
<LI><a href="#[171481c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDistance
</UL>

<P><STRONG><a name="[17124f4]"></a>ADCSequenceEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, adc.o(i.ADCSequenceEnable))
<BR><BR>[Called By]<UL><LI><a href="#[171265c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeADC
</UL>

<P><STRONG><a name="[17124b8]"></a>ADCSequenceStepConfigure</STRONG> (Thumb, 110 bytes, Stack size 4 bytes, adc.o(i.ADCSequenceStepConfigure))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ADCSequenceStepConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[171265c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeADC
</UL>

<P><STRONG><a name="[170b348]"></a>GPIODirModeSet</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[170aed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[170afc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[1712440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[1715230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
</UL>

<P><STRONG><a name="[170b2d0]"></a>GPIOIntTypeSet</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gpio.o(i.GPIOIntTypeSet))
<BR><BR>[Called By]<UL><LI><a href="#[17151f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
</UL>

<P><STRONG><a name="[170b258]"></a>GPIOPadConfigSet</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[170aed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[170afc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[1712440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[1715230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
</UL>

<P><STRONG><a name="[170b1e0]"></a>GPIOPinIntClear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[255d284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L14
</UL>

<P><STRONG><a name="[170b168]"></a>GPIOPinIntEnable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[17151f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
</UL>

<P><STRONG><a name="[170b12c]"></a>GPIOPinIntStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinIntStatus))
<BR><BR>[Called By]<UL><LI><a href="#[1712c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncoderInterruptHandler
</UL>

<P><STRONG><a name="[171247c]"></a>GPIOPinRead</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinRead))
<BR><BR>[Called By]<UL><LI><a href="#[17125a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codeSelect
<LI><a href="#[1715104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockoutProtection
<LI><a href="#[255d248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L15
<LI><a href="#[255d284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L14
<LI><a href="#[255e3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLS
</UL>

<P><STRONG><a name="[1712440]"></a>GPIOPinTypeGPIOInput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[170b258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[170b348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[17125e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitForStartup
<LI><a href="#[1715104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockoutProtection
<LI><a href="#[17151b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeLineSensor
<LI><a href="#[17151f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
<LI><a href="#[255e364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDischargingLS
</UL>

<P><STRONG><a name="[170afc4]"></a>GPIOPinTypeGPIOOutput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[170b258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[170b348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1715140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
<LI><a href="#[255e274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingLS
</UL>

<P><STRONG><a name="[170aed4]"></a>GPIOPinTypePWM</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypePWM))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypePWM
</UL>
<BR>[Calls]<UL><LI><a href="#[170b258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[170b348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1712404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[1715140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[1715230]"></a>GPIOPinTypeUART</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeUART))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeUART
</UL>
<BR>[Calls]<UL><LI><a href="#[170b258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[170b348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[171256c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[171526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[170ad6c]"></a>GPIOPinWrite</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[1715140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
<LI><a href="#[255e274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingLS
</UL>

<P><STRONG><a name="[170e804]"></a>IntEnable</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, interrupt.o(i.IntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[17151f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
</UL>

<P><STRONG><a name="[255e418]"></a>IntMasterEnable</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, interrupt.o(i.IntMasterEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IntMasterEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[255bcf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPUcpsie
</UL>
<BR>[Called By]<UL><LI><a href="#[171517c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMCU
</UL>

<P><STRONG><a name="[2560380]"></a>PWMGenConfigure</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, pwm.o(i.PWMGenConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[1712404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[1715140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[25602cc]"></a>PWMGenEnable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pwm.o(i.PWMGenEnable))
<BR><BR>[Called By]<UL><LI><a href="#[1712404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[1715140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[2560344]"></a>PWMGenPeriodSet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, pwm.o(i.PWMGenPeriodSet))
<BR><BR>[Called By]<UL><LI><a href="#[1712404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[1715140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[255f930]"></a>PWMOutputInvert</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, pwm.o(i.PWMOutputInvert))
<BR><BR>[Called By]<UL><LI><a href="#[1715140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[25603bc]"></a>PWMOutputState</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, pwm.o(i.PWMOutputState))
<BR><BR>[Called By]<UL><LI><a href="#[1712404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[1715140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[25603f8]"></a>PWMPulseWidthSet</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, pwm.o(i.PWMPulseWidthSet))
<BR><BR>[Called By]<UL><LI><a href="#[17123c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetServoPosition
<LI><a href="#[255f96c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMotorPower
</UL>

<P><STRONG><a name="[171328c]"></a>SysCtlClockGet</STRONG> (Thumb, 438 bytes, Stack size 8 bytes, sysctl.o(i.SysCtlClockGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[171337c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
<LI><a href="#[171517c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMCU
</UL>

<P><STRONG><a name="[2566320]"></a>SysCtlClockSet</STRONG> (Thumb, 288 bytes, Stack size 24 bytes, sysctl.o(i.SysCtlClockSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysCtlClockSet
</UL>
<BR>[Calls]<UL><LI><a href="#[256644c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[171517c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMCU
</UL>

<P><STRONG><a name="[2565eac]"></a>SysCtlPWMClockSet</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPWMClockSet))
<BR><BR>[Called By]<UL><LI><a href="#[171517c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMCU
</UL>

<P><STRONG><a name="[1714fd8]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[1712404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[171256c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[17125e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitForStartup
<LI><a href="#[171337c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
<LI><a href="#[1715104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockoutProtection
<LI><a href="#[1715140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
<LI><a href="#[17151b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeLineSensor
<LI><a href="#[17151f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
<LI><a href="#[171526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
<LI><a href="#[2560d94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUS
</UL>

<P><STRONG><a name="[1713250]"></a>SysCtlPeripheralPresent</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralPresent))
<BR><BR>[Called By]<UL><LI><a href="#[171337c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
</UL>

<P><STRONG><a name="[2560e0c]"></a>TimerConfigure</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, timer.o(i.TimerConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[2560d94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUS
</UL>

<P><STRONG><a name="[2560d58]"></a>TimerDisable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, timer.o(i.TimerDisable), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25614d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$DW$L$WaitUS$8$E
</UL>

<P><STRONG><a name="[2560dd0]"></a>TimerEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, timer.o(i.TimerEnable))
<BR><BR>[Called By]<UL><LI><a href="#[2561604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L1
</UL>

<P><STRONG><a name="[255e3dc]"></a>TimerIntClear</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, timer.o(i.TimerIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[1712c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSIntHandler
</UL>

<P><STRONG><a name="[2560e84]"></a>TimerLoadSet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, timer.o(i.TimerLoadSet))
<BR><BR>[Called By]<UL><LI><a href="#[255f570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L3
<LI><a href="#[2561604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L1
</UL>

<P><STRONG><a name="[2560ec0]"></a>TimerValueGet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, timer.o(i.TimerValueGet), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25615c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$DW$L$WaitUS$7$B
</UL>

<P><STRONG><a name="[1713214]"></a>UARTCharGet</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.UARTCharGet), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1713214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
</UL>
<BR>[Called By]<UL><LI><a href="#[1713214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
<LI><a href="#[17132c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTgetc
<LI><a href="#[1713304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTgets
</UL>

<P><STRONG><a name="[17131d8]"></a>UARTCharPut</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.UARTCharPut))
<BR><BR>[Calls]<UL><LI><a href="#[17131d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
</UL>
<BR>[Called By]<UL><LI><a href="#[17131d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1713304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTgets
<LI><a href="#[1713340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
</UL>

<P><STRONG><a name="[171319c]"></a>UARTConfigSetExpClk</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, uart.o(i.UARTConfigSetExpClk))
<BR><BR>[Calls]<UL><LI><a href="#[171319c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[171319c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[171337c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
</UL>

<P><STRONG><a name="[1713160]"></a>UARTEnable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uart.o(i.UARTEnable))
<BR><BR>[Called By]<UL><LI><a href="#[171337c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
</UL>

<P><STRONG><a name="[25cef64]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[25cef28]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[25ceeec]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1712ecc]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1712ecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[1712ecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[1712e90]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1712e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[1712e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[1712e54]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1712e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1712e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[2561604]"></a>$C$L1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, timer.obj(.text:WaitUS))
<BR><BR>[Calls]<UL><LI><a href="#[2560dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerEnable
<LI><a href="#[2560e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
</UL>
<BR>[Called By]<UL><LI><a href="#[2560d94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUS
</UL>

<P><STRONG><a name="[25615c8]"></a>$C$DW$L$WaitUS$7$B</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, timer.obj(.text:WaitUS), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2560ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerValueGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2561514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$DW$L$WaitUS$7$E
</UL>

<P><STRONG><a name="[2561514]"></a>$C$DW$L$WaitUS$7$E</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, timer.obj(.text:WaitUS), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25615c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$DW$L$WaitUS$7$B
</UL>

<P><STRONG><a name="[25614d8]"></a>$C$DW$L$WaitUS$8$E</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, timer.obj(.text:WaitUS), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2560d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerDisable
</UL>

<P><STRONG><a name="[255f5e8]"></a>$C$L1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, linesensor.obj(.text:SetDischargeTime))
<BR><BR>[Called By]<UL><LI><a href="#[1715050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDischargeTime
</UL>

<P><STRONG><a name="[255f5ac]"></a>$C$L2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, linesensor.obj(.text:LSIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = $C$L2 &rArr; StartChargingLS &rArr; GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[255e274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingLS
<LI><a href="#[255e3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLS
</UL>
<BR>[Called By]<UL><LI><a href="#[1712c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSIntHandler
</UL>

<P><STRONG><a name="[255f570]"></a>$C$L3</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, linesensor.obj(.text:LSIntHandler))
<BR><BR>[Calls]<UL><LI><a href="#[255f534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L4
<LI><a href="#[2560e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1712c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSIntHandler
</UL>

<P><STRONG><a name="[255f534]"></a>$C$L4</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, linesensor.obj(.text:LSIntHandler))
<BR><BR>[Called By]<UL><LI><a href="#[255f570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L3
</UL>

<P><STRONG><a name="[255deb4]"></a>$C$DW$L$LockoutProtection$4$B</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, init.obj(.text:LockoutProtection), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[255deb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$DW$L$LockoutProtection$4$B
</UL>
<BR>[Called By]<UL><LI><a href="#[255deb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$DW$L$LockoutProtection$4$B
</UL>

<P><STRONG><a name="[255de00]"></a>$C$DW$L$LockoutProtection$4$E</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, init.obj(.text:LockoutProtection))
<BR><BR>[Called By]<UL><LI><a href="#[1715104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockoutProtection
</UL>

<P><STRONG><a name="[255d518]"></a>$C$L3</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:InitializeEncoders))
<BR><BR>[Called By]<UL><LI><a href="#[17151f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
</UL>

<P><STRONG><a name="[255d4dc]"></a>$C$L4</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:InitializeEncoders))
<BR><BR>[Calls]<UL><LI><a href="#[255d464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L6
<LI><a href="#[255d4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L5
</UL>
<BR>[Called By]<UL><LI><a href="#[17151f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
</UL>

<P><STRONG><a name="[255d4a0]"></a>$C$L5</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:InitializeEncoders))
<BR><BR>[Called By]<UL><LI><a href="#[255d4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L4
</UL>

<P><STRONG><a name="[255d464]"></a>$C$L6</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:InitializeEncoders))
<BR><BR>[Called By]<UL><LI><a href="#[255d4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L4
</UL>

<P><STRONG><a name="[255d428]"></a>$C$L7</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:GetEncoderCount))
<BR><BR>[Calls]<UL><LI><a href="#[255d374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L10
</UL>
<BR>[Called By]<UL><LI><a href="#[17146f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEncoderCount
</UL>

<P><STRONG><a name="[255d3ec]"></a>$C$L8</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:GetEncoderCount))
<BR><BR>[Calls]<UL><LI><a href="#[255d374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L10
</UL>
<BR>[Called By]<UL><LI><a href="#[17146f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEncoderCount
</UL>

<P><STRONG><a name="[255d3b0]"></a>$C$L9</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:GetEncoderCount))
<BR><BR>[Called By]<UL><LI><a href="#[17146f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEncoderCount
</UL>

<P><STRONG><a name="[255d374]"></a>$C$L10</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:GetEncoderCount))
<BR><BR>[Called By]<UL><LI><a href="#[255d3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L8
<LI><a href="#[255d428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L7
</UL>

<P><STRONG><a name="[255d338]"></a>$C$L11</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Calls]<UL><LI><a href="#[255d284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L14
</UL>
<BR>[Called By]<UL><LI><a href="#[1712c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncoderInterruptHandler
</UL>

<P><STRONG><a name="[255d2fc]"></a>$C$L12</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Calls]<UL><LI><a href="#[255d284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L14
</UL>
<BR>[Called By]<UL><LI><a href="#[1712c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncoderInterruptHandler
</UL>

<P><STRONG><a name="[255d2c0]"></a>$C$L13</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Called By]<UL><LI><a href="#[1712c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncoderInterruptHandler
</UL>

<P><STRONG><a name="[255d284]"></a>$C$L14</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Calls]<UL><LI><a href="#[170b1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinIntClear
<LI><a href="#[171247c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
<LI><a href="#[255d248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L15
</UL>
<BR>[Called By]<UL><LI><a href="#[1712c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncoderInterruptHandler
<LI><a href="#[255d2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L12
<LI><a href="#[255d338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L11
</UL>

<P><STRONG><a name="[255d248]"></a>$C$L15</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Calls]<UL><LI><a href="#[171247c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
<LI><a href="#[255d20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L16
</UL>
<BR>[Called By]<UL><LI><a href="#[255d284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L14
</UL>

<P><STRONG><a name="[255d20c]"></a>$C$L16</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Calls]<UL><LI><a href="#[255d158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L19
<LI><a href="#[255d194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L18
<LI><a href="#[255d1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L17
</UL>
<BR>[Called By]<UL><LI><a href="#[255d248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L15
</UL>

<P><STRONG><a name="[255d1d0]"></a>$C$L17</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Calls]<UL><LI><a href="#[255d158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L19
</UL>
<BR>[Called By]<UL><LI><a href="#[255d20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L16
</UL>

<P><STRONG><a name="[255d194]"></a>$C$L18</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Called By]<UL><LI><a href="#[255d20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L16
</UL>

<P><STRONG><a name="[255d158]"></a>$C$L19</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Called By]<UL><LI><a href="#[1712c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncoderInterruptHandler
<LI><a href="#[255d1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L17
<LI><a href="#[255d20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L16
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
