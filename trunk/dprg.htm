<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [C:\Users\Raz\Desktop\DPRG\dprg\dprg.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image C:\Users\Raz\Desktop\DPRG\dprg\dprg.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 728]: Last Updated: Fri Nov 12 14:12:09 2010
<BR><P>
<H3>Maximum Stack Usage =        224 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; uartDemo &rArr; putc &rArr; UARTprintf &rArr; UARTwrite
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[9273b8]">Reset_Handler</a>
 <LI><a href="#[927598]">NmiSR</a>
 <LI><a href="#[92755c]">FaultISR</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1965048]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1965048]">SysCtlDelay</a><BR>
 <LI><a href="#[9267c4]">UARTCharPut</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9267c4]">UARTCharPut</a><BR>
 <LI><a href="#[926800]">UARTCharGet</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[926800]">UARTCharGet</a><BR>
 <LI><a href="#[926788]">UARTConfigSetExpClk</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[926788]">UARTConfigSetExpClk</a><BR>
 <LI><a href="#[927598]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[927598]">NmiSR</a><BR>
 <LI><a href="#[92755c]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[92755c]">FaultISR</a><BR>
 <LI><a href="#[927520]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[927520]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[9273b8]">Reset_Handler</a>
 <LI><a href="#[927598]">NmiSR</a>
 <LI><a href="#[92755c]">FaultISR</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[927520]">IntDefaultHandler</a>
 <LI><a href="#[9278a4]">main</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[9273b8]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1a0dd08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[1a0dd08]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[9273b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[1a0d9c0]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[1a0d894]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[1a0d63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1a0d858]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[1a0d63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1a0d768]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[1965048]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[1965048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[925978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[1965048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>

<P><STRONG><a name="[196ca28]"></a>CPUcpsid</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[1a0ddbc]"></a>CPUprimask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[196c9ec]"></a>CPUcpsie</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[9259b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
</UL>

<P><STRONG><a name="[1964760]"></a>CPUwfi</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[92a130]"></a>initEncoders</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, encoderdemo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = initEncoders &rArr; InitializeEncoders &rArr; GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[92a040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
</UL>
<BR>[Called By]<UL><LI><a href="#[9278a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[92a0f4]"></a>encoderDemo</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, encoderdemo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = encoderDemo &rArr; UARTprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[929f8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyWasPressed
<LI><a href="#[929fc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
<LI><a href="#[92a004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PresetEncoderCounts
<LI><a href="#[92a07c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEncoderCounts
<LI><a href="#[92a0b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEncoderCount
</UL>
<BR>[Called By]<UL><LI><a href="#[9278a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[929a28]"></a>initIRSensor</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, irsensordemo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = initIRSensor &rArr; ADCSequenceStepConfigure
</UL>
<BR>[Calls]<UL><LI><a href="#[92980c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[929848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceStepConfigure
<LI><a href="#[929884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceEnable
<LI><a href="#[9298fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[9278a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9299ec]"></a>getADCValue</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, irsensordemo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = getADCValue
</UL>
<BR>[Calls]<UL><LI><a href="#[9298c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceDataGet
<LI><a href="#[929938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCProcessorTrigger
<LI><a href="#[929974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCIntStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[9299b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRSensorDemo
</UL>

<P><STRONG><a name="[9299b0]"></a>IRSensorDemo</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, irsensordemo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = IRSensorDemo &rArr; UARTprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[9299ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getADCValue
<LI><a href="#[929f8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyWasPressed
<LI><a href="#[929fc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9278a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[928ee8]"></a>initLineSensor</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, linesensordemo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = initLineSensor &rArr; InitializeLineSensor &rArr; GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[928e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeLineSensor
</UL>
<BR>[Called By]<UL><LI><a href="#[9278a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[928eac]"></a>lineSensorDemo</STRONG> (Thumb, 94 bytes, Stack size 48 bytes, linesensordemo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = lineSensorDemo &rArr; UARTprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[928e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLineSensor
<LI><a href="#[929f8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyWasPressed
<LI><a href="#[929fc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9278a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9288d0]"></a>initMotors</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, motordemo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = initMotors &rArr; InitializeMotors &rArr; SetMotorPowers &rArr; SetMotorPower
</UL>
<BR>[Calls]<UL><LI><a href="#[928858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>
<BR>[Called By]<UL><LI><a href="#[9278a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[928894]"></a>motorDemo</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, motordemo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = motorDemo &rArr; putc &rArr; UARTprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[9287a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc
<LI><a href="#[9287e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getc
<LI><a href="#[92881c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMotorPowers
<LI><a href="#[929fc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9278a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[928330]"></a>initServo</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, servodemo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = initServo &rArr; InitializeServos &rArr; SetServoPosition
</UL>
<BR>[Calls]<UL><LI><a href="#[9282b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
</UL>
<BR>[Called By]<UL><LI><a href="#[9278a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9282f4]"></a>servoDemo</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, servodemo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = servoDemo &rArr; UARTprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[92827c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetServoPosition
<LI><a href="#[9287e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getc
<LI><a href="#[929fc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9278a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[927ef8]"></a>initUART</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, uartdemo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = initUART &rArr; UARTStdioInit &rArr; UARTStdioInitExpClk &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[927e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInit
<LI><a href="#[927e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[92980c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[9278a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9287a4]"></a>putc</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, uartdemo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = putc &rArr; UARTprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[929fc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9278a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[927ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartDemo
<LI><a href="#[928894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motorDemo
</UL>

<P><STRONG><a name="[9287e0]"></a>getc</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, uartdemo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = getc &rArr; UARTgetc
</UL>
<BR>[Calls]<UL><LI><a href="#[927dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTgetc
</UL>
<BR>[Called By]<UL><LI><a href="#[9278a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[927ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartDemo
<LI><a href="#[9282f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servoDemo
<LI><a href="#[928894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motorDemo
</UL>

<P><STRONG><a name="[927ebc]"></a>uartDemo</STRONG> (Thumb, 62 bytes, Stack size 112 bytes, uartdemo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = uartDemo &rArr; putc &rArr; UARTprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[927d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTgets
<LI><a href="#[9287a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc
<LI><a href="#[9287e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getc
<LI><a href="#[929fc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9278a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[929f8c]"></a>keyWasPressed</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, uartdemo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = keyWasPressed
</UL>
<BR>[Calls]<UL><LI><a href="#[927e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharsAvail
</UL>
<BR>[Called By]<UL><LI><a href="#[928eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lineSensorDemo
<LI><a href="#[9299b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRSensorDemo
<LI><a href="#[92a0f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoderDemo
</UL>

<P><STRONG><a name="[9278a4]"></a>main</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, robzdemo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = main &rArr; uartDemo &rArr; putc &rArr; UARTprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[92782c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockoutProtection
<LI><a href="#[927868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMCU
<LI><a href="#[927ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartDemo
<LI><a href="#[927ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUART
<LI><a href="#[9282f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servoDemo
<LI><a href="#[928330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initServo
<LI><a href="#[9287a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc
<LI><a href="#[9287e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getc
<LI><a href="#[928894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motorDemo
<LI><a href="#[9288d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMotors
<LI><a href="#[928eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lineSensorDemo
<LI><a href="#[928ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initLineSensor
<LI><a href="#[9299b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRSensorDemo
<LI><a href="#[929a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initIRSensor
<LI><a href="#[929fc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
<LI><a href="#[92a040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
<LI><a href="#[92a0b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEncoderCount
<LI><a href="#[92a0f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoderDemo
<LI><a href="#[92a130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initEncoders
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P><STRONG><a name="[9268f0]"></a>UARTStdioInitExpClk</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, uartstdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTStdioInitExpClk &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[92674c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTEnable
<LI><a href="#[926788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[92683c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralPresent
<LI><a href="#[926878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[92980c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[927e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInit
</UL>

<P><STRONG><a name="[927e08]"></a>UARTStdioInit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, uartstdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UARTStdioInit &rArr; UARTStdioInitExpClk &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[9268f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[927ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUART
</UL>

<P><STRONG><a name="[9268b4]"></a>UARTwrite</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, uartstdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[9267c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
</UL>
<BR>[Called By]<UL><LI><a href="#[927d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTgets
<LI><a href="#[929fc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
</UL>

<P><STRONG><a name="[927d90]"></a>UARTgets</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, uartstdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UARTgets &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[9267c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[926800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
<LI><a href="#[9268b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
</UL>
<BR>[Called By]<UL><LI><a href="#[927ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartDemo
</UL>

<P><STRONG><a name="[927dcc]"></a>UARTgetc</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, uartstdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UARTgetc
</UL>
<BR>[Calls]<UL><LI><a href="#[926800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
</UL>
<BR>[Called By]<UL><LI><a href="#[9287e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getc
</UL>

<P><STRONG><a name="[929fc8]"></a>UARTprintf</STRONG> (Thumb, 588 bytes, Stack size 72 bytes, uartstdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = UARTprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[9268b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
</UL>
<BR>[Called By]<UL><LI><a href="#[9278a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[927ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartDemo
<LI><a href="#[9282f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servoDemo
<LI><a href="#[9287a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc
<LI><a href="#[928894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motorDemo
<LI><a href="#[928eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lineSensorDemo
<LI><a href="#[9299b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRSensorDemo
<LI><a href="#[92a0f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoderDemo
</UL>

<P><STRONG><a name="[92a040]"></a>InitializeEncoders</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, encoder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = InitializeEncoders &rArr; GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[925f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
<LI><a href="#[925fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[926080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinIntEnable
<LI><a href="#[9260f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntTypeSet
<LI><a href="#[92980c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[9278a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[92a130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initEncoders
</UL>

<P><STRONG><a name="[92a07c]"></a>GetEncoderCounts</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, encoder.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[92a0f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoderDemo
</UL>

<P><STRONG><a name="[92a0b8]"></a>GetEncoderCount</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, encoder.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9278a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[92a0f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoderDemo
</UL>

<P><STRONG><a name="[92a004]"></a>PresetEncoderCounts</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, encoder.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[92a0f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoderDemo
</UL>

<P><STRONG><a name="[926170]"></a>PresetEncoderCount</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, encoder.o(.text), UNUSED)

<P><STRONG><a name="[926134]"></a>EncoderInterruptHandler</STRONG> (Thumb, 246 bytes, Stack size 32 bytes, encoder.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[926008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
<LI><a href="#[926044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinIntStatus
<LI><a href="#[9260bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinIntClear
</UL>

<P><STRONG><a name="[92782c]"></a>LockoutProtection</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LockoutProtection &rArr; GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[925fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[926008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
<LI><a href="#[92980c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[9278a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[927868]"></a>InitializeMCU</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = InitializeMCU &rArr; SysCtlClockSet
</UL>
<BR>[Calls]<UL><LI><a href="#[92593c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPWMClockSet
<LI><a href="#[925978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[9259b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
<LI><a href="#[926878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[9278a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[925180]"></a>StartChargingLS</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, linesensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = StartChargingLS &rArr; GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[924fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[924fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[9250cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSIntHandler
<LI><a href="#[928e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLineSensor
</UL>

<P><STRONG><a name="[925144]"></a>StartDischargingLS</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, linesensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = StartDischargingLS &rArr; GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[925fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
</UL>
<BR>[Called By]<UL><LI><a href="#[9250cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSIntHandler
<LI><a href="#[928e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLineSensor
</UL>

<P><STRONG><a name="[925108]"></a>ReadLS</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, linesensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ReadLS
</UL>
<BR>[Calls]<UL><LI><a href="#[926008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
</UL>
<BR>[Called By]<UL><LI><a href="#[9250cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSIntHandler
<LI><a href="#[928e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLineSensor
</UL>

<P><STRONG><a name="[9250cc]"></a>LSIntHandler</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, linesensor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[924e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
<LI><a href="#[924eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntClear
<LI><a href="#[925108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLS
<LI><a href="#[925144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDischargingLS
<LI><a href="#[925180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingLS
</UL>
<BR>[Called By]<UL><LI><a href="#[925054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeLineSensorAsync
</UL>

<P><STRONG><a name="[925090]"></a>SetDischargeTime</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, linesensor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[928e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeLineSensor
</UL>

<P><STRONG><a name="[928e70]"></a>InitializeLineSensor</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, linesensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = InitializeLineSensor &rArr; GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[925090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDischargeTime
<LI><a href="#[925fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[92980c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[925054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeLineSensorAsync
<LI><a href="#[928ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initLineSensor
</UL>

<P><STRONG><a name="[925054]"></a>InitializeLineSensorAsync</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, linesensor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[924eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntEnable
<LI><a href="#[924f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerEnable
<LI><a href="#[924f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerConfigure
<LI><a href="#[9250cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSIntHandler
<LI><a href="#[9259b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
<LI><a href="#[925f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
<LI><a href="#[928e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeLineSensor
<LI><a href="#[92980c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
</UL>

<P><STRONG><a name="[928e34]"></a>ReadLineSensor</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, linesensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ReadLineSensor &rArr; StartDischargingLS &rArr; GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[924e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUS
<LI><a href="#[925108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLS
<LI><a href="#[925144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDischargingLS
<LI><a href="#[925180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingLS
</UL>
<BR>[Called By]<UL><LI><a href="#[928eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lineSensorDemo
</UL>

<P><STRONG><a name="[925018]"></a>ReadLineSensorAsync</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, linesensor.o(.text), UNUSED)

<P><STRONG><a name="[924910]"></a>SetMotorPower</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, motor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetMotorPower
</UL>
<BR>[Calls]<UL><LI><a href="#[92476c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMPulseWidthSet
</UL>
<BR>[Called By]<UL><LI><a href="#[92881c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMotorPowers
</UL>

<P><STRONG><a name="[92881c]"></a>SetMotorPowers</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, motor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetMotorPowers &rArr; SetMotorPower
</UL>
<BR>[Calls]<UL><LI><a href="#[924910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMotorPower
</UL>
<BR>[Called By]<UL><LI><a href="#[928858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
<LI><a href="#[928894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motorDemo
</UL>

<P><STRONG><a name="[928858]"></a>InitializeMotors</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, motor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = InitializeMotors &rArr; SetMotorPowers &rArr; SetMotorPower
</UL>
<BR>[Calls]<UL><LI><a href="#[9247a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMOutputState
<LI><a href="#[9247e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMOutputInvert
<LI><a href="#[924820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenPeriodSet
<LI><a href="#[92485c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenEnable
<LI><a href="#[924898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenConfigure
<LI><a href="#[9248d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[924fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[924fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[92881c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMotorPowers
<LI><a href="#[92980c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[9288d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initMotors
</UL>

<P><STRONG><a name="[92827c]"></a>SetServoPosition</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, servo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetServoPosition
</UL>
<BR>[Calls]<UL><LI><a href="#[92476c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMPulseWidthSet
</UL>
<BR>[Called By]<UL><LI><a href="#[9282b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[9282f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;servoDemo
</UL>

<P><STRONG><a name="[9282b8]"></a>InitializeServos</STRONG> (Thumb, 176 bytes, Stack size 8 bytes, servo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = InitializeServos &rArr; SetServoPosition
</UL>
<BR>[Calls]<UL><LI><a href="#[9247a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMOutputState
<LI><a href="#[924820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenPeriodSet
<LI><a href="#[92485c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenEnable
<LI><a href="#[924898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenConfigure
<LI><a href="#[9248d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[92827c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetServoPosition
<LI><a href="#[92980c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[928330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initServo
</UL>

<P><STRONG><a name="[924e38]"></a>WaitUS</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WaitUS
</UL>
<BR>[Calls]<UL><LI><a href="#[923dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerValueGet
<LI><a href="#[923e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerDisable
<LI><a href="#[924e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
<LI><a href="#[924f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerEnable
<LI><a href="#[924f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerConfigure
<LI><a href="#[92980c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[923e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait
<LI><a href="#[928e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLineSensor
</UL>

<P><STRONG><a name="[923e48]"></a>Wait</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[924e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUS
</UL>

<P><STRONG><a name="[1a0d63c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a0d858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0d894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[1a0d600]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[929974]"></a>ADCIntStatus</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, adc.o(i.ADCIntStatus))
<BR><BR>[Called By]<UL><LI><a href="#[9299ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getADCValue
</UL>

<P><STRONG><a name="[929938]"></a>ADCProcessorTrigger</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, adc.o(i.ADCProcessorTrigger))
<BR><BR>[Called By]<UL><LI><a href="#[9299ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getADCValue
</UL>

<P><STRONG><a name="[9298fc]"></a>ADCSequenceConfigure</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, adc.o(i.ADCSequenceConfigure))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ADCSequenceConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[929a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initIRSensor
</UL>

<P><STRONG><a name="[9298c0]"></a>ADCSequenceDataGet</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, adc.o(i.ADCSequenceDataGet))
<BR><BR>[Called By]<UL><LI><a href="#[9299ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getADCValue
</UL>

<P><STRONG><a name="[929884]"></a>ADCSequenceEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, adc.o(i.ADCSequenceEnable))
<BR><BR>[Called By]<UL><LI><a href="#[929a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initIRSensor
</UL>

<P><STRONG><a name="[929848]"></a>ADCSequenceStepConfigure</STRONG> (Thumb, 110 bytes, Stack size 4 bytes, adc.o(i.ADCSequenceStepConfigure))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ADCSequenceStepConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[929a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initIRSensor
</UL>

<P><STRONG><a name="[91cdc8]"></a>GPIODirModeSet</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[9248d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[924fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[925fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[927e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
</UL>

<P><STRONG><a name="[9260f8]"></a>GPIOIntTypeSet</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gpio.o(i.GPIOIntTypeSet))
<BR><BR>[Called By]<UL><LI><a href="#[92a040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
</UL>

<P><STRONG><a name="[91cd14]"></a>GPIOPadConfigSet</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[9248d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[924fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[925fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[927e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
</UL>

<P><STRONG><a name="[9260bc]"></a>GPIOPinIntClear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinIntClear), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[926134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncoderInterruptHandler
</UL>

<P><STRONG><a name="[926080]"></a>GPIOPinIntEnable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[92a040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
</UL>

<P><STRONG><a name="[926044]"></a>GPIOPinIntStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinIntStatus), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[926134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncoderInterruptHandler
</UL>

<P><STRONG><a name="[926008]"></a>GPIOPinRead</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinRead))
<BR><BR>[Called By]<UL><LI><a href="#[925108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLS
<LI><a href="#[926134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncoderInterruptHandler
<LI><a href="#[92782c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockoutProtection
</UL>

<P><STRONG><a name="[925fcc]"></a>GPIOPinTypeGPIOInput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[91cd14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[91cdc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[925144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDischargingLS
<LI><a href="#[92782c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockoutProtection
<LI><a href="#[928e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeLineSensor
<LI><a href="#[92a040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
</UL>

<P><STRONG><a name="[924fdc]"></a>GPIOPinTypeGPIOOutput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[91cd14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[91cdc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[925180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingLS
<LI><a href="#[928858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[9248d4]"></a>GPIOPinTypePWM</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypePWM))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypePWM
</UL>
<BR>[Calls]<UL><LI><a href="#[91cd14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[91cdc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[9282b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[928858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[927e80]"></a>GPIOPinTypeUART</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeUART))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeUART
</UL>
<BR>[Calls]<UL><LI><a href="#[91cd14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[91cdc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[927ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUART
</UL>

<P><STRONG><a name="[924fa0]"></a>GPIOPinWrite</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[925180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingLS
<LI><a href="#[928858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[925f90]"></a>IntEnable</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, interrupt.o(i.IntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[925054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeLineSensorAsync
<LI><a href="#[92a040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
</UL>

<P><STRONG><a name="[9259b4]"></a>IntMasterEnable</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, interrupt.o(i.IntMasterEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IntMasterEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[196c9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPUcpsie
</UL>
<BR>[Called By]<UL><LI><a href="#[925054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeLineSensorAsync
<LI><a href="#[927868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMCU
</UL>

<P><STRONG><a name="[924898]"></a>PWMGenConfigure</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, pwm.o(i.PWMGenConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[9282b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[928858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[92485c]"></a>PWMGenEnable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pwm.o(i.PWMGenEnable))
<BR><BR>[Called By]<UL><LI><a href="#[9282b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[928858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[924820]"></a>PWMGenPeriodSet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, pwm.o(i.PWMGenPeriodSet))
<BR><BR>[Called By]<UL><LI><a href="#[9282b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[928858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[9247e4]"></a>PWMOutputInvert</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, pwm.o(i.PWMOutputInvert))
<BR><BR>[Called By]<UL><LI><a href="#[928858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[9247a8]"></a>PWMOutputState</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, pwm.o(i.PWMOutputState))
<BR><BR>[Called By]<UL><LI><a href="#[9282b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[928858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[92476c]"></a>PWMPulseWidthSet</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, pwm.o(i.PWMPulseWidthSet))
<BR><BR>[Called By]<UL><LI><a href="#[924910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMotorPower
<LI><a href="#[92827c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetServoPosition
</UL>

<P><STRONG><a name="[926878]"></a>SysCtlClockGet</STRONG> (Thumb, 438 bytes, Stack size 8 bytes, sysctl.o(i.SysCtlClockGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[9268f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
<LI><a href="#[927868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMCU
</UL>

<P><STRONG><a name="[925978]"></a>SysCtlClockSet</STRONG> (Thumb, 288 bytes, Stack size 24 bytes, sysctl.o(i.SysCtlClockSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysCtlClockSet
</UL>
<BR>[Calls]<UL><LI><a href="#[1965048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[927868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMCU
</UL>

<P><STRONG><a name="[92593c]"></a>SysCtlPWMClockSet</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPWMClockSet))
<BR><BR>[Called By]<UL><LI><a href="#[927868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMCU
</UL>

<P><STRONG><a name="[92980c]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[924e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUS
<LI><a href="#[925054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeLineSensorAsync
<LI><a href="#[9268f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
<LI><a href="#[92782c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockoutProtection
<LI><a href="#[927ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initUART
<LI><a href="#[9282b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[928858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
<LI><a href="#[928e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeLineSensor
<LI><a href="#[929a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initIRSensor
<LI><a href="#[92a040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
</UL>

<P><STRONG><a name="[92683c]"></a>SysCtlPeripheralPresent</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralPresent))
<BR><BR>[Called By]<UL><LI><a href="#[9268f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
</UL>

<P><STRONG><a name="[924f64]"></a>TimerConfigure</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, timer.o(i.TimerConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[924e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUS
<LI><a href="#[925054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeLineSensorAsync
</UL>

<P><STRONG><a name="[923e0c]"></a>TimerDisable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, timer.o(i.TimerDisable))
<BR><BR>[Called By]<UL><LI><a href="#[924e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUS
</UL>

<P><STRONG><a name="[924f28]"></a>TimerEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, timer.o(i.TimerEnable))
<BR><BR>[Called By]<UL><LI><a href="#[924e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUS
<LI><a href="#[925054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeLineSensorAsync
</UL>

<P><STRONG><a name="[924eec]"></a>TimerIntClear</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, timer.o(i.TimerIntClear), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9250cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSIntHandler
</UL>

<P><STRONG><a name="[924eb0]"></a>TimerIntEnable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, timer.o(i.TimerIntEnable), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[925054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeLineSensorAsync
</UL>

<P><STRONG><a name="[924e74]"></a>TimerLoadSet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, timer.o(i.TimerLoadSet))
<BR><BR>[Called By]<UL><LI><a href="#[924e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUS
<LI><a href="#[9250cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSIntHandler
</UL>

<P><STRONG><a name="[923dd0]"></a>TimerValueGet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, timer.o(i.TimerValueGet))
<BR><BR>[Called By]<UL><LI><a href="#[924e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUS
</UL>

<P><STRONG><a name="[926800]"></a>UARTCharGet</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.UARTCharGet))
<BR><BR>[Calls]<UL><LI><a href="#[926800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
</UL>
<BR>[Called By]<UL><LI><a href="#[926800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
<LI><a href="#[927d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTgets
<LI><a href="#[927dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTgetc
</UL>

<P><STRONG><a name="[9267c4]"></a>UARTCharPut</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.UARTCharPut))
<BR><BR>[Calls]<UL><LI><a href="#[9267c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
</UL>
<BR>[Called By]<UL><LI><a href="#[9267c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[9268b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
<LI><a href="#[927d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTgets
</UL>

<P><STRONG><a name="[927e44]"></a>UARTCharsAvail</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(i.UARTCharsAvail))
<BR><BR>[Called By]<UL><LI><a href="#[929f8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyWasPressed
</UL>

<P><STRONG><a name="[926788]"></a>UARTConfigSetExpClk</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, uart.o(i.UARTConfigSetExpClk))
<BR><BR>[Calls]<UL><LI><a href="#[926788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[926788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[9268f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
</UL>

<P><STRONG><a name="[92674c]"></a>UARTEnable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uart.o(i.UARTEnable))
<BR><BR>[Called By]<UL><LI><a href="#[9268f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
</UL>

<P><STRONG><a name="[1a0d240]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[1a0d204]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[1a0d1c8]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[927598]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[927598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[927598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[92755c]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[92755c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[92755c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[927520]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[927520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[927520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
