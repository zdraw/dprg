<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [C:\Users\Raz\Desktop\DPRG\dprg\dprg.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image C:\Users\Raz\Desktop\DPRG\dprg\dprg.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 728]: Last Updated: Sat Nov 13 03:53:53 2010
<BR><P>
<H3>Maximum Stack Usage =        200 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; LineFollow &rArr; InitializeMotors &rArr; SetMotorPowers
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[169256c]">Reset_Handler</a>
 <LI><a href="#[169274c]">NmiSR</a>
 <LI><a href="#[1692710]">FaultISR</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[2522fb0]">$C$L1</a>
 <LI><a href="#[2522f74]">$C$DW$L$WaitUS$7$B</a>
 <LI><a href="#[2522ec0]">$C$DW$L$WaitUS$7$E</a>
 <LI><a href="#[2522e84]">$C$DW$L$WaitUS$8$E</a>
 <LI><a href="#[2520fd0]">$C$L1</a>
 <LI><a href="#[2520f94]">$C$L2</a>
 <LI><a href="#[2520f58]">$C$L3</a>
 <LI><a href="#[2520f1c]">$C$L4</a>
 <LI><a href="#[251f89c]">$C$DW$L$LockoutProtection$4$B</a>
 <LI><a href="#[251f7e8]">$C$DW$L$LockoutProtection$4$E</a>
 <LI><a href="#[251ef00]">$C$L3</a>
 <LI><a href="#[251eec4]">$C$L4</a>
 <LI><a href="#[251ee88]">$C$L5</a>
 <LI><a href="#[251ee4c]">$C$L6</a>
 <LI><a href="#[251ee10]">$C$L7</a>
 <LI><a href="#[251edd4]">$C$L8</a>
 <LI><a href="#[251ed98]">$C$L9</a>
 <LI><a href="#[251ed5c]">$C$L10</a>
 <LI><a href="#[251ed20]">$C$L11</a>
 <LI><a href="#[251ece4]">$C$L12</a>
 <LI><a href="#[251eca8]">$C$L13</a>
 <LI><a href="#[251ec6c]">$C$L14</a>
 <LI><a href="#[251ec30]">$C$L15</a>
 <LI><a href="#[251ebf4]">$C$L16</a>
 <LI><a href="#[251ebb8]">$C$L17</a>
 <LI><a href="#[251eb7c]">$C$L18</a>
 <LI><a href="#[251eb40]">$C$L19</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1692a58]">UARTCharPut</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1692a58]">UARTCharPut</a><BR>
 <LI><a href="#[1692a1c]">UARTConfigSetExpClk</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1692a1c]">UARTConfigSetExpClk</a><BR>
 <LI><a href="#[2527df8]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2527df8]">SysCtlDelay</a><BR>
 <LI><a href="#[169274c]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[169274c]">NmiSR</a><BR>
 <LI><a href="#[1692710]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1692710]">FaultISR</a><BR>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16926d4]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[169256c]">Reset_Handler</a>
 <LI><a href="#[169274c]">NmiSR</a>
 <LI><a href="#[1692710]">FaultISR</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16924f4]">EncoderInterruptHandler</a>
 <LI><a href="#[16924f4]">EncoderInterruptHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16924b8]">LSIntHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[16926d4]">IntDefaultHandler</a>
 <LI><a href="#[1691dec]">main</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[169256c]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2591414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2591414]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[169256c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[25910cc]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2590fa0]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2590d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2590f64]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2590d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2590e74]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[2527df8]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[2527df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[2527ccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[2527df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>

<P><STRONG><a name="[251d754]"></a>CPUcpsid</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[251d718]"></a>CPUprimask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[251d6dc]"></a>CPUcpsie</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[251fe00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
</UL>

<P><STRONG><a name="[2527498]"></a>CPUwfi</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[16952a8]"></a>getLineError</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, linefollow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = getLineError
</UL>
<BR>[Called By]<UL><LI><a href="#[169526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[169526c]"></a>LineFollow</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, linefollow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = LineFollow &rArr; InitializeMotors &rArr; SetMotorPowers
</UL>
<BR>[Calls]<UL><LI><a href="#[1694f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saturate
<LI><a href="#[1694f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInit
<LI><a href="#[1694fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[1695014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMotorPowers
<LI><a href="#[1695050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDischargeTime
<LI><a href="#[169508c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLineSensor
<LI><a href="#[16950c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID
<LI><a href="#[1695104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockoutProtection
<LI><a href="#[1695140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
<LI><a href="#[169517c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMCU
<LI><a href="#[16951b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeLineSensor
<LI><a href="#[16951f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
<LI><a href="#[1695230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[16952a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getLineError
</UL>
<BR>[Called By]<UL><LI><a href="#[1691dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[169472c]"></a>getDistance</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, tabletop.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = getDistance &rArr; UARTprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[16944d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
<LI><a href="#[1694600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceDataGet
<LI><a href="#[169463c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCProcessorTrigger
<LI><a href="#[1694678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCIntStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[16946f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crossTable
</UL>

<P><STRONG><a name="[16946f0]"></a>crossTable</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, tabletop.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = crossTable &rArr; getDistance &rArr; UARTprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[169454c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PresetEncoderCounts
<LI><a href="#[16945c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEncoderCount
<LI><a href="#[169472c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDistance
<LI><a href="#[1695014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMotorPowers
</UL>
<BR>[Called By]<UL><LI><a href="#[1691dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16946b4]"></a>CubeAttack</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, tabletop.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = CubeAttack &rArr; UARTprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[1694498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait
<LI><a href="#[16944d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
<LI><a href="#[1694510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sonar_Get
<LI><a href="#[1694588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_Sonar
</UL>
<BR>[Called By]<UL><LI><a href="#[1691dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1694060]"></a>UpdateMotors</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, squaredance.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UpdateMotors &rArr; SetMotorPowers
</UL>
<BR>[Calls]<UL><LI><a href="#[1694f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saturate
<LI><a href="#[1695014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMotorPowers
<LI><a href="#[16950c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID
</UL>
<BR>[Called By]<UL><LI><a href="#[1694024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SquareDance
</UL>

<P><STRONG><a name="[1694024]"></a>SquareDance</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, squaredance.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = SquareDance &rArr; UARTprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[1693fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccelerateToMax
<LI><a href="#[1694060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMotors
<LI><a href="#[16944d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
<LI><a href="#[169454c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PresetEncoderCounts
<LI><a href="#[16945c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEncoderCount
<LI><a href="#[1695014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMotorPowers
</UL>
<BR>[Called By]<UL><LI><a href="#[1691dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16950c8]"></a>PID</STRONG> (Thumb, 44 bytes, Stack size 20 bytes, motorpid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PID
</UL>
<BR>[Called By]<UL><LI><a href="#[1694060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMotors
<LI><a href="#[169526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[1694f60]"></a>saturate</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, motorpid.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1694060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMotors
<LI><a href="#[169526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[1693fe8]"></a>AccelerateToMax</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, motorpid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AccelerateToMax &rArr; SetMotorPowers
</UL>
<BR>[Calls]<UL><LI><a href="#[1694498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait
<LI><a href="#[1695014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMotorPowers
</UL>
<BR>[Called By]<UL><LI><a href="#[1694024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SquareDance
</UL>

<P><STRONG><a name="[1694588]"></a>Initialize_Sonar</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sonar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Initialize_Sonar &rArr; GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[16936c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[1693700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[1694fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[16946b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CubeAttack
</UL>

<P><STRONG><a name="[1694510]"></a>Sonar_Get</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, sonar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = Sonar_Get &rArr; WaitUS
</UL>
<BR>[Calls]<UL><LI><a href="#[169364c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUS
<LI><a href="#[1693688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[169373c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
</UL>
<BR>[Called By]<UL><LI><a href="#[16946b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CubeAttack
</UL>

<P><STRONG><a name="[1692bfc]"></a>UARTStdioInitExpClk</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, uartstdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTStdioInitExpClk &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[16929e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTEnable
<LI><a href="#[1692a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[1692ad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralPresent
<LI><a href="#[1692b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[1694fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[1694f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInit
</UL>

<P><STRONG><a name="[1694f9c]"></a>UARTStdioInit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, uartstdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UARTStdioInit &rArr; UARTStdioInitExpClk &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[1692bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[1691dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[169526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[1692bc0]"></a>UARTwrite</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, uartstdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[1692a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
</UL>
<BR>[Called By]<UL><LI><a href="#[1692b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTgets
<LI><a href="#[16944d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
</UL>

<P><STRONG><a name="[1692b84]"></a>UARTgets</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, uartstdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1692a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1692a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
<LI><a href="#[1692bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
</UL>

<P><STRONG><a name="[1692b48]"></a>UARTgetc</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, uartstdio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1692a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
</UL>

<P><STRONG><a name="[16944d4]"></a>UARTprintf</STRONG> (Thumb, 588 bytes, Stack size 72 bytes, uartstdio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = UARTprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[1692bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
</UL>
<BR>[Called By]<UL><LI><a href="#[1691dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1694024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SquareDance
<LI><a href="#[16946b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CubeAttack
<LI><a href="#[169472c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDistance
</UL>

<P><STRONG><a name="[1691edc]"></a>InitializeADC</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, dprg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = InitializeADC &rArr; ADCSequenceStepConfigure
</UL>
<BR>[Calls]<UL><LI><a href="#[1691d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceStepConfigure
<LI><a href="#[1691d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceEnable
<LI><a href="#[1691db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[1691dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1691ea0]"></a>GetADCValue</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, dprg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetADCValue
</UL>
<BR>[Calls]<UL><LI><a href="#[1694498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait
<LI><a href="#[1694600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceDataGet
<LI><a href="#[169463c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCProcessorTrigger
<LI><a href="#[1694678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCIntStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1691e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitForStartup
</UL>

<P><STRONG><a name="[1691e64]"></a>waitForStartup</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, dprg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = waitForStartup &rArr; GetADCValue
</UL>
<BR>[Calls]<UL><LI><a href="#[1691cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetServoPosition
<LI><a href="#[1691ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCValue
<LI><a href="#[1693700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[1694498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait
<LI><a href="#[1694fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[1691dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1691e28]"></a>codeSelect</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, dprg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = codeSelect
</UL>
<BR>[Calls]<UL><LI><a href="#[169373c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
</UL>
<BR>[Called By]<UL><LI><a href="#[1691dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1691dec]"></a>main</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, dprg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = main &rArr; LineFollow &rArr; InitializeMotors &rArr; SetMotorPowers
</UL>
<BR>[Calls]<UL><LI><a href="#[1691cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[1691e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codeSelect
<LI><a href="#[1691e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitForStartup
<LI><a href="#[1691edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeADC
<LI><a href="#[1694024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SquareDance
<LI><a href="#[16944d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
<LI><a href="#[16946b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CubeAttack
<LI><a href="#[16946f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crossTable
<LI><a href="#[1694f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInit
<LI><a href="#[1694fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[1695104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockoutProtection
<LI><a href="#[1695140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
<LI><a href="#[169517c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMCU
<LI><a href="#[16951f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
<LI><a href="#[1695230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[169526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P><STRONG><a name="[2590d48]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2590f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2590fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[2590d0c]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[16924f4]"></a>EncoderInterruptHandler</STRONG> (Thumb, 0 bytes, Stack size 160 bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = EncoderInterruptHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[168aa60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinIntStatus
<LI><a href="#[251eb40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L19
<LI><a href="#[251ec6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L14
<LI><a href="#[251eca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L13
<LI><a href="#[251ece4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L12
<LI><a href="#[251ed20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L11
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[16945c4]"></a>GetEncoderCount</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, encoder.obj(.text:GetEncoderCount))
<BR><BR>[Calls]<UL><LI><a href="#[251ed98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L9
<LI><a href="#[251edd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L8
<LI><a href="#[251ee10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L7
</UL>
<BR>[Called By]<UL><LI><a href="#[1694024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SquareDance
<LI><a href="#[16946f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crossTable
</UL>

<P><STRONG><a name="[16951f4]"></a>InitializeEncoders</STRONG> (Thumb, 0 bytes, Stack size 96 bytes, encoder.obj(.text:InitializeEncoders))
<BR><BR>[Stack]<UL><LI>Max Depth = 108 + Unknown Stack Size
<LI>Call Chain = InitializeEncoders &rArr; GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[168aa9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinIntEnable
<LI><a href="#[168ac04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntTypeSet
<LI><a href="#[168e138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
<LI><a href="#[1693700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[1694fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[251eec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L4
<LI><a href="#[251ef00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L3
</UL>
<BR>[Called By]<UL><LI><a href="#[1691dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[169526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[16951b8]"></a>InitializeLineSensor</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, linesensor.obj(.text:InitializeLineSensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = InitializeLineSensor &rArr; GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[1693700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[1694fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[169526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[169517c]"></a>InitializeMCU</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, init.obj(.text:InitializeMCU))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = InitializeMCU &rArr; SysCtlClockSet
</UL>
<BR>[Calls]<UL><LI><a href="#[1692b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[251fe00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
<LI><a href="#[2527858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPWMClockSet
<LI><a href="#[2527ccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1691dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[169526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[1695140]"></a>InitializeMotors</STRONG> (Thumb, 0 bytes, Stack size 128 bytes, motor.obj(.text:InitializeMotors))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = InitializeMotors &rArr; SetMotorPowers
</UL>
<BR>[Calls]<UL><LI><a href="#[168a844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[1693688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[16936c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[1694fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[1695014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMotorPowers
<LI><a href="#[2521318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMOutputInvert
<LI><a href="#[2521cb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenEnable
<LI><a href="#[2521d2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenPeriodSet
<LI><a href="#[2521d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenConfigure
<LI><a href="#[2521da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMOutputState
</UL>
<BR>[Called By]<UL><LI><a href="#[1691dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[169526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[1691cfc]"></a>InitializeServos</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, servo.obj(.text:InitializeServos))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = InitializeServos &rArr; GPIOPinTypePWM
</UL>
<BR>[Calls]<UL><LI><a href="#[168a844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[1691cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetServoPosition
<LI><a href="#[1694fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[2521cb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenEnable
<LI><a href="#[2521d2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenPeriodSet
<LI><a href="#[2521d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenConfigure
<LI><a href="#[2521da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMOutputState
</UL>
<BR>[Called By]<UL><LI><a href="#[1691dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16924b8]"></a>LSIntHandler</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, linesensor.obj(.text:LSIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 140 + Unknown Stack Size
<LI>Call Chain = LSIntHandler &rArr; $C$L2 &rArr; StartChargingLS &rArr; GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[251fd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDischargingLS
<LI><a href="#[251fdc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntClear
<LI><a href="#[2520f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L3
<LI><a href="#[2520f94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[1695104]"></a>LockoutProtection</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, init.obj(.text:LockoutProtection))
<BR><BR>[Stack]<UL><LI>Max Depth = 44 + Unknown Stack Size
<LI>Call Chain = LockoutProtection &rArr; GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[1693700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[169373c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
<LI><a href="#[1694fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[251f7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$DW$L$LockoutProtection$4$E
</UL>
<BR>[Called By]<UL><LI><a href="#[1691dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[169526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[169454c]"></a>PresetEncoderCounts</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, encoder.obj(.text:PresetEncoderCounts))
<BR><BR>[Called By]<UL><LI><a href="#[1694024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SquareDance
<LI><a href="#[16946f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crossTable
</UL>

<P><STRONG><a name="[251fd88]"></a>ReadLS</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, linesensor.obj(.text:ReadLS))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ReadLS
</UL>
<BR>[Calls]<UL><LI><a href="#[169373c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
</UL>
<BR>[Called By]<UL><LI><a href="#[169508c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLineSensor
<LI><a href="#[2520f94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L2
</UL>

<P><STRONG><a name="[169508c]"></a>ReadLineSensor</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, linesensor.obj(.text:ReadLineSensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 108 + Unknown Stack Size
<LI>Call Chain = ReadLineSensor &rArr; StartChargingLS &rArr; GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[169364c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUS
<LI><a href="#[251fc5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingLS
<LI><a href="#[251fd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDischargingLS
<LI><a href="#[251fd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLS
</UL>
<BR>[Called By]<UL><LI><a href="#[169526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[1695050]"></a>SetDischargeTime</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, linesensor.obj(.text:SetDischargeTime))
<BR><BR>[Calls]<UL><LI><a href="#[2520fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L1
</UL>
<BR>[Called By]<UL><LI><a href="#[169526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[2521354]"></a>SetMotorPower</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, motor.obj(.text:SetMotorPower))
<BR><BR>[Calls]<UL><LI><a href="#[2521de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMPulseWidthSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1695014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMotorPowers
</UL>

<P><STRONG><a name="[1695014]"></a>SetMotorPowers</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, motor.obj(.text:SetMotorPowers))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetMotorPowers
</UL>
<BR>[Calls]<UL><LI><a href="#[2521354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMotorPower
</UL>
<BR>[Called By]<UL><LI><a href="#[1693fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccelerateToMax
<LI><a href="#[1694024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SquareDance
<LI><a href="#[1694060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateMotors
<LI><a href="#[16946f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crossTable
<LI><a href="#[1695140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
<LI><a href="#[169526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[1691cc0]"></a>SetServoPosition</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, servo.obj(.text:SetServoPosition))
<BR><BR>[Calls]<UL><LI><a href="#[2521de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMPulseWidthSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1691cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[1691e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitForStartup
</UL>

<P><STRONG><a name="[251fc5c]"></a>StartChargingLS</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, linesensor.obj(.text:StartChargingLS))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = StartChargingLS &rArr; GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[1693688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[16936c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[169508c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLineSensor
<LI><a href="#[2520f94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L2
</UL>

<P><STRONG><a name="[251fd4c]"></a>StartDischargingLS</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, linesensor.obj(.text:StartDischargingLS))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = StartDischargingLS &rArr; GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[1693700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
</UL>
<BR>[Called By]<UL><LI><a href="#[16924b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSIntHandler
<LI><a href="#[169508c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLineSensor
</UL>

<P><STRONG><a name="[1694498]"></a>Wait</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, timer.obj(.text:Wait))
<BR><BR>[Called By]<UL><LI><a href="#[1691e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitForStartup
<LI><a href="#[1691ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCValue
<LI><a href="#[1693fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccelerateToMax
<LI><a href="#[16946b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CubeAttack
</UL>

<P><STRONG><a name="[169364c]"></a>WaitUS</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, timer.obj(.text:WaitUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = WaitUS
</UL>
<BR>[Calls]<UL><LI><a href="#[1694fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[25227b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerConfigure
<LI><a href="#[2522fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L1
</UL>
<BR>[Called By]<UL><LI><a href="#[1694510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sonar_Get
<LI><a href="#[169508c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLineSensor
</UL>

<P><STRONG><a name="[1694678]"></a>ADCIntStatus</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, adc.o(i.ADCIntStatus))
<BR><BR>[Called By]<UL><LI><a href="#[1691ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCValue
<LI><a href="#[169472c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDistance
</UL>

<P><STRONG><a name="[169463c]"></a>ADCProcessorTrigger</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, adc.o(i.ADCProcessorTrigger))
<BR><BR>[Called By]<UL><LI><a href="#[1691ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCValue
<LI><a href="#[169472c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDistance
</UL>

<P><STRONG><a name="[1691db0]"></a>ADCSequenceConfigure</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, adc.o(i.ADCSequenceConfigure))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ADCSequenceConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[1691edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeADC
</UL>

<P><STRONG><a name="[1694600]"></a>ADCSequenceDataGet</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, adc.o(i.ADCSequenceDataGet))
<BR><BR>[Called By]<UL><LI><a href="#[1691ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCValue
<LI><a href="#[169472c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDistance
</UL>

<P><STRONG><a name="[1691d74]"></a>ADCSequenceEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, adc.o(i.ADCSequenceEnable))
<BR><BR>[Called By]<UL><LI><a href="#[1691edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeADC
</UL>

<P><STRONG><a name="[1691d38]"></a>ADCSequenceStepConfigure</STRONG> (Thumb, 110 bytes, Stack size 4 bytes, adc.o(i.ADCSequenceStepConfigure))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ADCSequenceStepConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[1691edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeADC
</UL>

<P><STRONG><a name="[168ac7c]"></a>GPIODirModeSet</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[168a844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[16936c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[1693700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[1695230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
</UL>

<P><STRONG><a name="[168ac04]"></a>GPIOIntTypeSet</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gpio.o(i.GPIOIntTypeSet))
<BR><BR>[Called By]<UL><LI><a href="#[16951f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
</UL>

<P><STRONG><a name="[168ab8c]"></a>GPIOPadConfigSet</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[168a844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[16936c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[1693700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[1695230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
</UL>

<P><STRONG><a name="[168ab14]"></a>GPIOPinIntClear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[251ec6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L14
</UL>

<P><STRONG><a name="[168aa9c]"></a>GPIOPinIntEnable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[16951f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
</UL>

<P><STRONG><a name="[168aa60]"></a>GPIOPinIntStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinIntStatus))
<BR><BR>[Called By]<UL><LI><a href="#[16924f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncoderInterruptHandler
</UL>

<P><STRONG><a name="[169373c]"></a>GPIOPinRead</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinRead))
<BR><BR>[Called By]<UL><LI><a href="#[1691e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codeSelect
<LI><a href="#[1694510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sonar_Get
<LI><a href="#[1695104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockoutProtection
<LI><a href="#[251ec30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L15
<LI><a href="#[251ec6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L14
<LI><a href="#[251fd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLS
</UL>

<P><STRONG><a name="[1693700]"></a>GPIOPinTypeGPIOInput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[168ab8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[168ac7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1691e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitForStartup
<LI><a href="#[1694588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_Sonar
<LI><a href="#[1695104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockoutProtection
<LI><a href="#[16951b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeLineSensor
<LI><a href="#[16951f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
<LI><a href="#[251fd4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDischargingLS
</UL>

<P><STRONG><a name="[16936c4]"></a>GPIOPinTypeGPIOOutput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[168ab8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[168ac7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1694588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_Sonar
<LI><a href="#[1695140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
<LI><a href="#[251fc5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingLS
</UL>

<P><STRONG><a name="[168a844]"></a>GPIOPinTypePWM</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypePWM))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypePWM
</UL>
<BR>[Calls]<UL><LI><a href="#[168ab8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[168ac7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1691cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[1695140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[1695230]"></a>GPIOPinTypeUART</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeUART))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeUART
</UL>
<BR>[Calls]<UL><LI><a href="#[168ab8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[168ac7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1691dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[169526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[1693688]"></a>GPIOPinWrite</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[1694510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sonar_Get
<LI><a href="#[1695140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
<LI><a href="#[251fc5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingLS
</UL>

<P><STRONG><a name="[168e138]"></a>IntEnable</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, interrupt.o(i.IntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[16951f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
</UL>

<P><STRONG><a name="[251fe00]"></a>IntMasterEnable</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, interrupt.o(i.IntMasterEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IntMasterEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[251d6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPUcpsie
</UL>
<BR>[Called By]<UL><LI><a href="#[169517c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMCU
</UL>

<P><STRONG><a name="[2521d68]"></a>PWMGenConfigure</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, pwm.o(i.PWMGenConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[1691cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[1695140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[2521cb4]"></a>PWMGenEnable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pwm.o(i.PWMGenEnable))
<BR><BR>[Called By]<UL><LI><a href="#[1691cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[1695140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[2521d2c]"></a>PWMGenPeriodSet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, pwm.o(i.PWMGenPeriodSet))
<BR><BR>[Called By]<UL><LI><a href="#[1691cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[1695140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[2521318]"></a>PWMOutputInvert</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, pwm.o(i.PWMOutputInvert))
<BR><BR>[Called By]<UL><LI><a href="#[1695140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[2521da4]"></a>PWMOutputState</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, pwm.o(i.PWMOutputState))
<BR><BR>[Called By]<UL><LI><a href="#[1691cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[1695140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
</UL>

<P><STRONG><a name="[2521de0]"></a>PWMPulseWidthSet</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, pwm.o(i.PWMPulseWidthSet))
<BR><BR>[Called By]<UL><LI><a href="#[1691cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetServoPosition
<LI><a href="#[2521354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMotorPower
</UL>

<P><STRONG><a name="[1692b0c]"></a>SysCtlClockGet</STRONG> (Thumb, 438 bytes, Stack size 8 bytes, sysctl.o(i.SysCtlClockGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[1692bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
<LI><a href="#[169517c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMCU
</UL>

<P><STRONG><a name="[2527ccc]"></a>SysCtlClockSet</STRONG> (Thumb, 288 bytes, Stack size 24 bytes, sysctl.o(i.SysCtlClockSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysCtlClockSet
</UL>
<BR>[Calls]<UL><LI><a href="#[2527df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[169517c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMCU
</UL>

<P><STRONG><a name="[2527858]"></a>SysCtlPWMClockSet</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPWMClockSet))
<BR><BR>[Called By]<UL><LI><a href="#[169517c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMCU
</UL>

<P><STRONG><a name="[1694fd8]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[1691cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeServos
<LI><a href="#[1691dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1691e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitForStartup
<LI><a href="#[1692bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
<LI><a href="#[169364c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUS
<LI><a href="#[1694588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_Sonar
<LI><a href="#[1695104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockoutProtection
<LI><a href="#[1695140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeMotors
<LI><a href="#[16951b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeLineSensor
<LI><a href="#[16951f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
<LI><a href="#[169526c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LineFollow
</UL>

<P><STRONG><a name="[1692ad0]"></a>SysCtlPeripheralPresent</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralPresent))
<BR><BR>[Called By]<UL><LI><a href="#[1692bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
</UL>

<P><STRONG><a name="[25227b8]"></a>TimerConfigure</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, timer.o(i.TimerConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[169364c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUS
</UL>

<P><STRONG><a name="[2522740]"></a>TimerDisable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, timer.o(i.TimerDisable), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2522e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$DW$L$WaitUS$8$E
</UL>

<P><STRONG><a name="[252277c]"></a>TimerEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, timer.o(i.TimerEnable))
<BR><BR>[Called By]<UL><LI><a href="#[2522fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L1
</UL>

<P><STRONG><a name="[251fdc4]"></a>TimerIntClear</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, timer.o(i.TimerIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[16924b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSIntHandler
</UL>

<P><STRONG><a name="[2522830]"></a>TimerLoadSet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, timer.o(i.TimerLoadSet))
<BR><BR>[Called By]<UL><LI><a href="#[2520f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L3
<LI><a href="#[2522fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L1
</UL>

<P><STRONG><a name="[252286c]"></a>TimerValueGet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, timer.o(i.TimerValueGet), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2522f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$DW$L$WaitUS$7$B
</UL>

<P><STRONG><a name="[1692a94]"></a>UARTCharGet</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.UARTCharGet), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1692a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
</UL>
<BR>[Called By]<UL><LI><a href="#[1692a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
<LI><a href="#[1692b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTgetc
<LI><a href="#[1692b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTgets
</UL>

<P><STRONG><a name="[1692a58]"></a>UARTCharPut</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.UARTCharPut))
<BR><BR>[Calls]<UL><LI><a href="#[1692a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
</UL>
<BR>[Called By]<UL><LI><a href="#[1692a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[1692b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTgets
<LI><a href="#[1692bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
</UL>

<P><STRONG><a name="[1692a1c]"></a>UARTConfigSetExpClk</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, uart.o(i.UARTConfigSetExpClk))
<BR><BR>[Calls]<UL><LI><a href="#[1692a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[1692a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[1692bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
</UL>

<P><STRONG><a name="[16929e0]"></a>UARTEnable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uart.o(i.UARTEnable))
<BR><BR>[Called By]<UL><LI><a href="#[1692bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
</UL>

<P><STRONG><a name="[259094c]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[2590910]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[25908d4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[169274c]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[169274c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[169274c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[1692710]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1692710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[1692710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[16926d4]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[16926d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[16926d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[2522fb0]"></a>$C$L1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, timer.obj(.text:WaitUS))
<BR><BR>[Calls]<UL><LI><a href="#[252277c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerEnable
<LI><a href="#[2522830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
</UL>
<BR>[Called By]<UL><LI><a href="#[169364c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUS
</UL>

<P><STRONG><a name="[2522f74]"></a>$C$DW$L$WaitUS$7$B</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, timer.obj(.text:WaitUS), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252286c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerValueGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2522ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$DW$L$WaitUS$7$E
</UL>

<P><STRONG><a name="[2522ec0]"></a>$C$DW$L$WaitUS$7$E</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, timer.obj(.text:WaitUS), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2522f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$DW$L$WaitUS$7$B
</UL>

<P><STRONG><a name="[2522e84]"></a>$C$DW$L$WaitUS$8$E</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, timer.obj(.text:WaitUS), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2522740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerDisable
</UL>

<P><STRONG><a name="[2520fd0]"></a>$C$L1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, linesensor.obj(.text:SetDischargeTime))
<BR><BR>[Called By]<UL><LI><a href="#[1695050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDischargeTime
</UL>

<P><STRONG><a name="[2520f94]"></a>$C$L2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, linesensor.obj(.text:LSIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = $C$L2 &rArr; StartChargingLS &rArr; GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[251fc5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartChargingLS
<LI><a href="#[251fd88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadLS
</UL>
<BR>[Called By]<UL><LI><a href="#[16924b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSIntHandler
</UL>

<P><STRONG><a name="[2520f58]"></a>$C$L3</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, linesensor.obj(.text:LSIntHandler))
<BR><BR>[Calls]<UL><LI><a href="#[2520f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L4
<LI><a href="#[2522830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
</UL>
<BR>[Called By]<UL><LI><a href="#[16924b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSIntHandler
</UL>

<P><STRONG><a name="[2520f1c]"></a>$C$L4</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, linesensor.obj(.text:LSIntHandler))
<BR><BR>[Called By]<UL><LI><a href="#[2520f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L3
</UL>

<P><STRONG><a name="[251f89c]"></a>$C$DW$L$LockoutProtection$4$B</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, init.obj(.text:LockoutProtection), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[251f89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$DW$L$LockoutProtection$4$B
</UL>
<BR>[Called By]<UL><LI><a href="#[251f89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$DW$L$LockoutProtection$4$B
</UL>

<P><STRONG><a name="[251f7e8]"></a>$C$DW$L$LockoutProtection$4$E</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, init.obj(.text:LockoutProtection))
<BR><BR>[Called By]<UL><LI><a href="#[1695104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockoutProtection
</UL>

<P><STRONG><a name="[251ef00]"></a>$C$L3</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:InitializeEncoders))
<BR><BR>[Called By]<UL><LI><a href="#[16951f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
</UL>

<P><STRONG><a name="[251eec4]"></a>$C$L4</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:InitializeEncoders))
<BR><BR>[Calls]<UL><LI><a href="#[251ee4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L6
<LI><a href="#[251ee88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L5
</UL>
<BR>[Called By]<UL><LI><a href="#[16951f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeEncoders
</UL>

<P><STRONG><a name="[251ee88]"></a>$C$L5</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:InitializeEncoders))
<BR><BR>[Called By]<UL><LI><a href="#[251eec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L4
</UL>

<P><STRONG><a name="[251ee4c]"></a>$C$L6</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:InitializeEncoders))
<BR><BR>[Called By]<UL><LI><a href="#[251eec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L4
</UL>

<P><STRONG><a name="[251ee10]"></a>$C$L7</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:GetEncoderCount))
<BR><BR>[Calls]<UL><LI><a href="#[251ed5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L10
</UL>
<BR>[Called By]<UL><LI><a href="#[16945c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEncoderCount
</UL>

<P><STRONG><a name="[251edd4]"></a>$C$L8</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:GetEncoderCount))
<BR><BR>[Calls]<UL><LI><a href="#[251ed5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L10
</UL>
<BR>[Called By]<UL><LI><a href="#[16945c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEncoderCount
</UL>

<P><STRONG><a name="[251ed98]"></a>$C$L9</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:GetEncoderCount))
<BR><BR>[Called By]<UL><LI><a href="#[16945c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEncoderCount
</UL>

<P><STRONG><a name="[251ed5c]"></a>$C$L10</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:GetEncoderCount))
<BR><BR>[Called By]<UL><LI><a href="#[251edd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L8
<LI><a href="#[251ee10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L7
</UL>

<P><STRONG><a name="[251ed20]"></a>$C$L11</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Calls]<UL><LI><a href="#[251ec6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L14
</UL>
<BR>[Called By]<UL><LI><a href="#[16924f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncoderInterruptHandler
</UL>

<P><STRONG><a name="[251ece4]"></a>$C$L12</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Calls]<UL><LI><a href="#[251ec6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L14
</UL>
<BR>[Called By]<UL><LI><a href="#[16924f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncoderInterruptHandler
</UL>

<P><STRONG><a name="[251eca8]"></a>$C$L13</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Called By]<UL><LI><a href="#[16924f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncoderInterruptHandler
</UL>

<P><STRONG><a name="[251ec6c]"></a>$C$L14</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Calls]<UL><LI><a href="#[168ab14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinIntClear
<LI><a href="#[169373c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
<LI><a href="#[251ec30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L15
</UL>
<BR>[Called By]<UL><LI><a href="#[16924f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncoderInterruptHandler
<LI><a href="#[251ece4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L12
<LI><a href="#[251ed20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L11
</UL>

<P><STRONG><a name="[251ec30]"></a>$C$L15</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Calls]<UL><LI><a href="#[169373c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
<LI><a href="#[251ebf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L16
</UL>
<BR>[Called By]<UL><LI><a href="#[251ec6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L14
</UL>

<P><STRONG><a name="[251ebf4]"></a>$C$L16</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Calls]<UL><LI><a href="#[251eb40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L19
<LI><a href="#[251eb7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L18
<LI><a href="#[251ebb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L17
</UL>
<BR>[Called By]<UL><LI><a href="#[251ec30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L15
</UL>

<P><STRONG><a name="[251ebb8]"></a>$C$L17</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Calls]<UL><LI><a href="#[251eb40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L19
</UL>
<BR>[Called By]<UL><LI><a href="#[251ebf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L16
</UL>

<P><STRONG><a name="[251eb7c]"></a>$C$L18</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Called By]<UL><LI><a href="#[251ebf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L16
</UL>

<P><STRONG><a name="[251eb40]"></a>$C$L19</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, encoder.obj(.text:EncoderInterruptHandler))
<BR><BR>[Called By]<UL><LI><a href="#[16924f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EncoderInterruptHandler
<LI><a href="#[251ebb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L17
<LI><a href="#[251ebf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$C$L16
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
